<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>AutoIt GUI Skeleton</title>
        <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
        <link>https://autoit-gui-skeleton.github.io//fr/</link>
        <description></description>
        <pubDate>Tue, 13 Sep 2022 15:12:48 +0200</pubDate>
        
        <item>
            <title>Utiliser curl pour faire des requêtes HTTP avec &lt;b&gt;AGS-wrapper-curl&lt;/b&gt;</title>
            <link>/blog/2021/11/25/ags_wrapper_curl.html</link>
            <guid isPermaLink="true">/blog/2021/11/25/ags_wrapper_curl.html</guid>
            <description>&lt;blockquote&gt;
  &lt;p&gt;AGS fournit le &lt;em&gt;wrapper&lt;/em&gt; &lt;a href=&quot;https://www.npmjs.com/package/@autoit-gui-skeleton/ags-wrapper-curl&quot;&gt;@autoit-gui-skeleton/ags-wrapper-curl&lt;/a&gt; pour la librairie &lt;a href=&quot;https://www.autoitscript.com/forum/topic/173067-curl-udf-autoit-binary-code-version-of-libcurl-with-ssl-support/&quot;&gt;Curl&lt;/a&gt; construite par Ward.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;h1 id=&quot;comment-installer-ags-wrapper-scrollbars-&quot;&gt;Comment installer AGS-wrapper-scrollbars ?&lt;/h1&gt;

&lt;p&gt;On suppose que vous avez déjà installé &lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; et &lt;a href=&quot;https://yarnpkg.com/lang/en/&quot;&gt;Yarn&lt;/a&gt;, par example avec &lt;a href=&quot;https://chocolatey.org/&quot;&gt;Chocolatey&lt;/a&gt;, et pour installer le package AGS-wrapper-json, vous pouvez alors utiliser le gestionnaire de dépendances pour AutoIt fournit dans AGS. Il suffit donc de taper dans le dossier racine du projet, où le fichier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; est stocké :&lt;/p&gt;

&lt;pre class=&quot;command-line&quot; data-prompt=&quot;C: \&amp;gt;&quot;&gt;
&lt;code class=&quot; language-bash&quot;&gt;yarn add @autoit-gui-skeleton/ags-wrapper-curl --modules-folder vendor&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;Toutes les dépendances du projet, ainsi que les dépendances filles des dépedances parentes sont installées dans le répertoire &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./vendor/@autoit-gui-skeleton/&lt;/code&gt;. Pour l’utiliser dans son programme AutoIt, vous devez inclure cette bibliothèque avec l’instruction :&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-autoit&quot;&gt;#include &apos;vendor/@autoit-gui-skeleton/ags-wrapper-string-size/Curl.au3&apos;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tous les paquets AGS hébergés dans le dépôt npmjs appartiennent à l’organisation &lt;a href=&quot;https://www.npmjs.com/search?q=autoit-gui-skeleton&quot;&gt;@autoit-gui-skeleton organization&lt;/a&gt;. En effet afin de simplifier la gestion des dépendances d’un projet AutoIt construit avec le framework AGS, nous avons détourné de son utilisation initiale le gestionnaire de dépendance npm, et son évolution Yarn. Cela nous permet de gérer les dépendances d’un projet AGS avec d’autres bibliothèques AutoIt, et de partager ces paquets AutoIt à partir du référentiel npmjs.org.&lt;/p&gt;

&lt;h2 id=&quot;curl-ward-library&quot;&gt;Curl Ward library&lt;/h2&gt;

&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;Cette bibliothèque fournit une implémentation de libcurl avec le support SSL. Il est construit avec une autre bibliothèque Ward &lt;a href=&quot;https://www.autoitscript.com/forum/topic/162366-binarycall-udf-write-subroutines-in-c-call-in-autoit/&quot;&gt;BinaryCall&lt;/a&gt;, et il offre les fonctionnalités suivantes :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Aucune DLL supplémentaire nécessaire. Grâce à l’utilisation de la librairie BinaryCall.&lt;/li&gt;
  &lt;li&gt;Avec support SSL/TLS et zlib (sans libidn, libiconv, libssh2).&lt;/li&gt;
  &lt;li&gt;Prise en charge complète de l’interface curl easy-interface.&lt;/li&gt;
  &lt;li&gt;Prise en charge partielle de l’interface curl multi-interface.&lt;/li&gt;
  &lt;li&gt;Les données peuvent être lues ou écrites dans des variables ou des fichiers automatiques.&lt;/li&gt;
  &lt;li&gt;Taille de la librairie plus petite, en comparaison à la plupart des DLL de libcurl.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Les informations de version de cette version :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Version Curl : libcurl/7.42.1&lt;/li&gt;
  &lt;li&gt;Version SSL : mbedTLS/1.3.10&lt;/li&gt;
  &lt;li&gt;Version Libz : 1.2.8&lt;/li&gt;
  &lt;li&gt;Protocoles : ftp, ftps, http, https&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Voici les fonctions supplémentaires qui ne sont pas incluses dans la librairie libcurl.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Curl_DataWriteCallback()
Curl_DataReadCallback()
Curl_FileWriteCallback()
Curl_FileReadCallback()
Curl_Data_Put()
Curl_Data_Get()
Curl_Data_Cleanup()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Source Ward : &lt;a href=&quot;https://www.autoitscript.com/forum/topic/173067-curl-udf-autoit-binary-code-version-of-libcurl-with-ssl-support/&quot;&gt;https://www.autoitscript.com/forum/topic/173067-curl-udf-autoit-binary-code-version-of-libcurl-with-ssl-support/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;exemples&quot;&gt;Exemples&lt;/h3&gt;

&lt;h4 id=&quot;récupérer-le-http-header-et-son-contenu&quot;&gt;Récupérer le HTTP header et son contenu&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-autoit&quot;&gt;#Include &quot;../Curl.au3&quot;

; How to get html or header data?
;   1. Set $CURLOPT_WRITEFUNCTION and $CURLOPT_HEADERFUNCTION to Curl_DataWriteCallback()
;   2. Set $CURLOPT_WRITEDATA or $CURLOPT_HEADERDATA to any number as identify
;   3. Use Curl_Data_Get() to read the returned data in binary format
;   4. Use Curl_Data_Cleanup() to remove the data

Local $Curl = Curl_Easy_Init()
If Not $Curl Then Return

Local $Html = $Curl ; any number as identify
Local $Header = $Curl + 1 ; any number as identify

; Curl configuration
Curl_Easy_Setopt($Curl, $CURLOPT_URL, &quot;https://www.google.com&quot;)
Curl_Easy_Setopt($Curl, $CURLOPT_USERAGENT, &quot;AutoIt/Curl&quot;)
Curl_Easy_Setopt($Curl, $CURLOPT_FOLLOWLOCATION, 1)
Curl_Easy_Setopt($Curl, $CURLOPT_ACCEPT_ENCODING, &quot;gzip&quot;) ; or set &quot;&quot; use all built-in supported encodings
Curl_Easy_Setopt($Curl, $CURLOPT_WRITEFUNCTION, Curl_DataWriteCallback())
Curl_Easy_Setopt($Curl, $CURLOPT_WRITEDATA, $Html)
Curl_Easy_Setopt($Curl, $CURLOPT_HEADERFUNCTION, Curl_DataWriteCallback())
Curl_Easy_Setopt($Curl, $CURLOPT_HEADERDATA, $Header)
Curl_Easy_Setopt($Curl, $CURLOPT_COOKIE, &quot;tool=curl; script=autoit; fun=yes;&quot;)
Curl_Easy_Setopt($Curl, $CURLOPT_TIMEOUT, 30)
Curl_Easy_Setopt($Curl, $CURLOPT_SSL_VERIFYPEER, 0)

; Perform curl request
Local $Code = Curl_Easy_Perform($Curl)
If $Code = $CURLE_OK Then
	ConsoleWrite(&quot;Content Type: &quot; &amp;amp; Curl_Easy_GetInfo($Curl, $CURLINFO_CONTENT_TYPE) &amp;amp; @LF)
	ConsoleWrite(&quot;Download Size: &quot; &amp;amp; Curl_Easy_GetInfo($Curl, $CURLINFO_SIZE_DOWNLOAD) &amp;amp; @LF)

	MsgBox(0, &apos;Header&apos;, BinaryToString(Curl_Data_Get($Header)))
	MsgBox(0, &apos;Html&apos;, BinaryToString(Curl_Data_Get($Html)))
Else
	ConsoleWrite(Curl_Easy_StrError($Code) &amp;amp; @LF)
EndIf

Curl_Easy_Cleanup($Curl)
Curl_Data_Cleanup($Header)
Curl_Data_Cleanup($Html)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;utiliser-curl-avec-un-proxy&quot;&gt;Utiliser curl avec un proxy&lt;/h4&gt;

&lt;p&gt;By default, libcurl respects the proxy environment variables named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http_proxy&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ftp_proxy&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sftp_proxy&lt;/code&gt; etc. If set, libcurl will use the specified proxy for that URL scheme. So for a “FTP://” URL, the ftp_proxy is considered. all_proxy is used if no protocol specific proxy was set. If &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;no_proxy&lt;/code&gt; is set, it is the exact equivalent of setting the CURLOPT_NOPROXY option. But if you want to ovveride envrionnement variables, it’s possible with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$CURLOPT_PROXY&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CURLOPT_NOPROXY&lt;/code&gt; options.&lt;/p&gt;

&lt;p&gt;To set a proxy, use :&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Curl_Easy_Setopt($Curl, $CURLOPT_PROXY, &apos;https://myProxy.com:8080&apos;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To disable default proxy configuration, use :&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-autoit&quot;&gt;Curl_Easy_Setopt($Curl, $CURLOPT_PROXY, &apos;&apos;);
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;faire-des-requêtes-http-avec-multi-interface-pour-ne-pas-freezer-lihm&quot;&gt;Faire des requêtes HTTP avec multi interface pour ne pas freezer l’IHM&lt;/h4&gt;

&lt;p&gt;L’interface multi dans libcurl offre plusieurs capacités que l’interface par défaut (esay-interface) n’offre pas. Ce sont principalement :&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Activez une interface “pull”. L’application qui utilise libcurl décide où et quand demander à libcurl d’obtenir/envoyer des données.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Activez plusieurs transferts simultanés dans le même thread sans compliquer (freezer) la tâche de l’application.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Autorisez l’application à attendre une action sur ses propres descripteurs de fichier et les descripteurs de fichier de curl simultanément.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Activez la gestion basée sur les événements et la mise à l’échelle des transferts jusqu’à et au-delà de milliers de connexions parallèles.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;Plus d’informations : &lt;a href=&quot;https://curl.se/libcurl/c/libcurl-multi.html&quot;&gt;https://curl.se/libcurl/c/libcurl-multi.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&quot;language-autoit&quot;&gt;
Local $Curl = Curl_Easy_Init()
If Not $Curl Then Return

Curl_Easy_Setopt($Curl, $CURLOPT_URL, &quot;http://www.google.com&quot;)
Curl_Easy_Setopt($Curl, $CURLOPT_USERAGENT, &quot;AutoIt/Curl&quot;)
Curl_Easy_Setopt($Curl, $CURLOPT_FOLLOWLOCATION, 1)
Curl_Easy_Setopt($Curl, $CURLOPT_ACCEPT_ENCODING, &quot;&quot;)
Curl_Easy_Setopt($Curl, $CURLOPT_WRITEFUNCTION, Curl_DataWriteCallback())
Curl_Easy_Setopt($Curl, $CURLOPT_WRITEDATA, $Curl)
Curl_Easy_Setopt($Curl, $CURLOPT_HEADERFUNCTION, Curl_DataWriteCallback())
Curl_Easy_Setopt($Curl, $CURLOPT_HEADERDATA, $Curl + 1)

Local $Multi = Curl_Multi_Init()
If Not $Multi Then Return
Curl_Multi_Add_Handle($Multi, $Curl)

Local $Running, $MsgsInQueue
Do
	Curl_Multi_Perform($Multi, $Running)
	Local $CURLMsg = Curl_Multi_Info_Read($Multi, $MsgsInQueue)
	If DllStructGetData($CURLMsg, &quot;msg&quot;) = $CURLMSG_DONE Then
		Local $Curl = DllStructGetData($CURLMsg, &quot;easy_handle&quot;)
		Local $Code = DllStructGetData($CURLMsg, &quot;data&quot;)
		If $Code = $CURLE_OK Then
			ConsoleWrite(&quot;Content Type: &quot; &amp;amp; Curl_Easy_GetInfo($Curl, $CURLINFO_CONTENT_TYPE) &amp;amp; @LF)
			ConsoleWrite(&quot;Download Size: &quot; &amp;amp; Curl_Easy_GetInfo($Curl, $CURLINFO_SIZE_DOWNLOAD) &amp;amp; @LF)

			MsgBox(0, &apos;Header&apos;, BinaryToString(Curl_Data_Get($Curl + 1)))
			MsgBox(0, &apos;Html&apos;, BinaryToString(Curl_Data_Get($Curl)))
		Else
			ConsoleWrite(Curl_Easy_StrError($Code) &amp;amp; @LF)
		EndIf
		Curl_Multi_Remove_Handle($Multi, $Curl)
		Curl_Easy_Cleanup($Curl)
		Curl_Data_Cleanup($Curl)
		Curl_Data_Cleanup($Curl + 1)
	EndIf
	ConsoleWrite(&quot;non-GUI-blocking&quot; &amp;amp; @LF)
	Sleep(10)
Until $Running = 0
Curl_Multi_Cleanup($Multi)
ConsoleWrite(@LF)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;autres-examples&quot;&gt;Autres examples&lt;/h4&gt;

&lt;p&gt;Voir plus d’&lt;a href=&quot;https://github.com/autoit-gui-skeleton/ags-wrapper-curl/tree/master/Examples&quot;&gt;examples&lt;/a&gt; dans le dépôt git.&lt;/p&gt;
</description>
            <pubDate>Thu, 25 Nov 2021 00:00:00 +0100</pubDate>
        </item>
        
        <item>
            <title>Simplifier l&apos;utilisation de scrollbars avec &lt;b&gt;AGS-wrapper-scrollbars&lt;/b&gt;</title>
            <link>/blog/2021/11/24/ags_wrapper_scrollbars.html</link>
            <guid isPermaLink="true">/blog/2021/11/24/ags_wrapper_scrollbars.html</guid>
            <description>&lt;blockquote&gt;
  &lt;p&gt;AGS fournit le &lt;em&gt;wrapper&lt;/em&gt; &lt;a href=&quot;https://www.npmjs.com/package/@autoit-gui-skeleton/ags-wrapper-scrollbars&quot;&gt;@autoit-gui-skeleton/ags-wrapper-scrollbars&lt;/a&gt; pour la librairie &lt;a href=&quot;https://www.autoitscript.com/forum/topic/113723-scrollbars-made-easy-bugfix-version-2-may-21/&quot;&gt;GUIScrollbar_Ex and GUIScrollbars_Size&lt;/a&gt; construite par Melba23.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;h1 id=&quot;comment-installer-ags-wrapper-scrollbars-&quot;&gt;Comment installer AGS-wrapper-scrollbars ?&lt;/h1&gt;

&lt;p&gt;On suppose que vous avez déjà installé &lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; et &lt;a href=&quot;https://yarnpkg.com/lang/en/&quot;&gt;Yarn&lt;/a&gt;, par example avec &lt;a href=&quot;https://chocolatey.org/&quot;&gt;Chocolatey&lt;/a&gt;, et pour installer le package AGS-wrapper-json, vous pouvez alors utiliser le gestionnaire de dépendances pour AutoIt fournit dans AGS. Il suffit donc de taper dans le dossier racine du projet, où le fichier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; est stocké :&lt;/p&gt;

&lt;pre class=&quot;command-line&quot; data-prompt=&quot;C: \&amp;gt;&quot;&gt;
&lt;code class=&quot; language-bash&quot;&gt;yarn add @autoit-gui-skeleton/ags-wrapper-scrollbars --modules-folder vendor&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;Toutes les dépendances du projet, ainsi que les dépendances filles des dépedances parentes sont installées dans le répertoire &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./vendor/@autoit-gui-skeleton/&lt;/code&gt;. Pour l’utiliser dans son programme AutoIt, vous devez inclure cette bibliothèque avec l’instruction :&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-autoit&quot;&gt;#include &apos;vendor/@autoit-gui-skeleton/ags-wrapper-string-size/GUIScrollBars_Ex.au3&apos;
#include &apos;vendor/@autoit-gui-skeleton/ags-wrapper-string-size/GUIScrollBars_Size.au3&apos;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tous les paquets AGS hébergés dans le dépôt npmjs appartiennent à l’organisation &lt;a href=&quot;https://www.npmjs.com/search?q=autoit-gui-skeleton&quot;&gt;@autoit-gui-skeleton organization&lt;/a&gt;. En effet afin de simplifier la gestion des dépendances d’un projet AutoIt construit avec le framework AGS, nous avons détourné de son utilisation initiale le gestionnaire de dépendance npm, et son évolution Yarn. Cela nous permet de gérer les dépendances d’un projet AGS avec d’autres bibliothèques AutoIt, et de partager ces paquets AutoIt à partir du référentiel npmjs.org.&lt;/p&gt;

&lt;h1 id=&quot;scrollbars&quot;&gt;Scrollbars&lt;/h1&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;GUIScrollbars_Ex.au3&lt;/strong&gt; - Cette librairie permet de créer des scrollbars selon votre GUI en une seule et simple commande, sans autres inclusions. La librairie est conçu pour simplifier le processus trop complexe pour créer des scrollbars dans AutoIt. Elle comprend également une commande pour vous permettre de faire défiler l’interface page par page, facilitant ainsi le défilement n’importe où sur l’interface graphique avec uniquement des calculs simples basés sur les valeurs que vous avez utilisées pour créer les interfaces graphiques. Les scrollbars sont également récalculées dans des interfaces graphiques redimensionnables.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GUIScrollbars_Size.au3&lt;/strong&gt; - Calcule les nombres Page et Max que l’utilisateur doit alimenter dans les commandes _GUIScrollbar_SetScrollInfoPage/Max. Cette librairie s’adresse aux développeurs plus expérimenté, mais s’avère particulièrement utile lorsque vous avez une interface graphique avec une taille de défilement dynamique (c’est-à-dire en ajoutant ou en soustrayant des contrôles à la zone de défilement pendant l’exécution du script).&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Source de Melba23 : &lt;a href=&quot;https://www.autoitscript.com/forum/topic/113723-scrollbars-made-easy-bugfix-version-2-may-21/&quot;&gt;https://www.autoitscript.com/forum/topic/113723-scrollbars-made-easy-bugfix-version-2-may-21/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;examples&quot;&gt;Examples&lt;/h2&gt;

&lt;h3 id=&quot;simple-usage&quot;&gt;Simple usage&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-autoit&quot;&gt;#include &amp;lt;guiconstantsex.au3&amp;gt;
#include &quot;GUIScrollbars_Ex.au3&quot;

; Create GUI with red background
$hGUI = GUICreate(&quot;Test&quot;, 500, 500)
GUISetBkColor(0xFF0000, $hGUI)

; Create a 1000x1000 green label
GUICtrlCreateLabel(&quot;&quot;, 0, 0, 1000, 1000)
GUICtrlSetBkColor(-1, 0x00FF00)
GUISetState()

; Generate scrollbars
_GUIScrollbars_Generate($hGUI, 1000, 1000)

While 1
    Switch GUIGetMsg()
        Case $GUI_EVENT_CLOSE
            Exit
    EndSwitch
WEnd
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;autres-examples&quot;&gt;Autres examples&lt;/h3&gt;

&lt;p&gt;Voir plus d’&lt;a href=&quot;https://github.com/autoit-gui-skeleton/ags-wrapper-scrollbars/tree/master/Examples&quot;&gt;exemples&lt;/a&gt; dans le dépôt git du wrapper.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Continue la lecture ?&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://autoit-gui-skeleton.github.io//fr/documentation/getting-started#dependencies-manager-for-autoit&quot;&gt;Dependencies manager for AutoIt&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
            <pubDate>Wed, 24 Nov 2021 00:00:00 +0100</pubDate>
        </item>
        
        <item>
            <title>Calculer la taille requise par une chaîne de caractères pour l&apos;inserer dans un label avec &lt;b&gt;AGS-wrapper-string-size&lt;/b&gt;</title>
            <link>/blog/2021/11/22/ags_wrapper_string_size.html</link>
            <guid isPermaLink="true">/blog/2021/11/22/ags_wrapper_string_size.html</guid>
            <description>&lt;blockquote&gt;
  &lt;p&gt;Pour calculer la taille ; largeur et hauteur ; requise par une chaine de caractères, AGS fournit le &lt;em&gt;wrapper&lt;/em&gt; &lt;a href=&quot;https://www.npmjs.com/package/@autoit-gui-skeleton/ags-wrapper-string-size&quot;&gt;@autoit-gui-skeleton/ags-wrapper-string-size&lt;/a&gt; de la librairie &lt;a href=&quot;https://www.autoitscript.com/forum/topic/114034-stringsize-m23-new-version-16-aug-11/&quot;&gt;StringSize.au3&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;h1 id=&quot;comment-installer-ags-wrapper-string-size-&quot;&gt;Comment installer AGS-wrapper-string-size ?&lt;/h1&gt;

&lt;p&gt;On suppose que vous avez déjà installé &lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; et &lt;a href=&quot;https://yarnpkg.com/lang/en/&quot;&gt;Yarn&lt;/a&gt;, par example avec &lt;a href=&quot;https://chocolatey.org/&quot;&gt;Chocolatey&lt;/a&gt;, et pour installer le package AGS-wrapper-json, vous pouvez alors utiliser le gestionnaire de dépendances pour AutoIt fournit dans AGS. Il suffit donc de taper dans le dossier racine du projet, où le fichier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; est stocké :&lt;/p&gt;

&lt;pre class=&quot;command-line&quot; data-prompt=&quot;C: \&amp;gt;&quot;&gt;
&lt;code class=&quot; language-bash&quot;&gt;yarn add @autoit-gui-skeleton/ags-wrapper-string-size --modules-folder vendor&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;Toutes les dépendances du projet, ainsi que les dépendances filles des dépedances parentes sont installées dans le répertoire &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./vendor/@autoit-gui-skeleton/&lt;/code&gt;. Pour l’utiliser dans son programme AutoIt, vous devez inclure cette bibliothèque avec l’instruction :&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-autoit&quot;&gt;#include &apos;vendor/@autoit-gui-skeleton/ags-wrapper-string-size/StringSize.au3&apos;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tous les paquets AGS hébergés dans le dépôt npmjs appartiennent à l’organisation &lt;a href=&quot;https://www.npmjs.com/search?q=autoit-gui-skeleton&quot;&gt;@autoit-gui-skeleton organization&lt;/a&gt;. En effet afin de simplifier la gestion des dépendances d’un projet AutoIt construit avec le framework AGS, nous avons détourné de son utilisation initiale le gestionnaire de dépendance npm, et son évolution Yarn. Cela nous permet de gérer les dépendances d’un projet AGS avec d’autres bibliothèques AutoIt, et de partager ces paquets AutoIt à partir du référentiel npmjs.org.&lt;/p&gt;

&lt;h1 id=&quot;stringsize&quot;&gt;StringSize&lt;/h1&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;La bibliothèque StringSize prend une chaîne de texte et calcule la taille de l’étiquette requise pour la contenir, ainsi que la mise en forme de la chaîne pour qu’elle s’adapte.&lt;/p&gt;

&lt;h2 id=&quot;exemples&quot;&gt;Exemples&lt;/h2&gt;

&lt;h3 id=&quot;simple-usage&quot;&gt;Simple usage&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-autoit&quot;&gt;Local $stringSize = _StringSize($text, $fontsize, $fontweight, $fontattribute, $fontfamily, $GUI_width - $marginLeftRight*2)

If(Not @error) Then
      $label_TEXT_reformated = $stringSize[0]
      $label_WIDTH_calculated = $stringSize[2] ; ($stringSize[2] / $dpi)
      $label_HEIGHT_calculated = $stringSize[3] ; ($stringSize[3] / $dpi)
    
      GUISetFont($fontsize, $fontweight, $fontattribute, $fontfamily)
      GUICtrlSetData($label_ID, $label_TEXT_reformated)
      GUICtrlSetPos($label_ID, $marginLeftRight, $top, $label_WIDTH_calculated, $label_HEIGHT_calculated)
EndIf
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;reformaté-une-string-dans-un-label&quot;&gt;Reformaté une string dans un label&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-autoit&quot;&gt;#include &amp;lt;GUIConstantsEx.au3&amp;gt;
#include &quot;StringSize.au3&quot;

$sText = &quot; I am a very long line and I am not formatted in any way so that I will not fit within the width of the GUI that surrounds me!&quot;

$hGUI = GUICreate(&quot;Test&quot;, 500, 500)

; A label with no width or height set
GUICtrlCreateLabel($sText, 10, 10)
GUICtrlSetBkColor(-1, 0xFF8080)

; A label with no height set
GUICtrlCreateLabel($sText, 10, 50, 200)
GUICtrlSetBkColor(-1, 0xC0C0FF)

; A label sized by StringSize
$aSize = _StringSize($sText, Default, Default, Default, &quot;&quot;, 200)
GUICtrlCreateLabel($aSize[0], 10, 90, $aSize[2], $aSize[3])
GUICtrlSetBkColor(-1, 0x80FF80)

GUISetState()

While 1
    Switch GUIGetMsg()
        Case $GUI_EVENT_CLOSE
            Exit
    EndSwitch
WEnd
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;calcul-de-la-plus-grande-taille-de-police-possible-pour-une-largeur-de-label-donné&quot;&gt;Calcul de la plus grande taille de police possible pour une largeur de label donné&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-autoit&quot;&gt;#include &amp;lt;GUIConstantsEx.au3&amp;gt;

#include &quot;StringSize.au3&quot;

; Declare arrays to hold parameters
Global $aFont[4] = [&quot;Arial&quot;, &quot;Tahoma&quot;, &quot;Courier New&quot;, &quot;Comic Sans MS&quot;]
Global $aWeight[4] = [200, 400, 600, 800]
Global $aAttrib[4] = [0, 2, 4, 0]
Global $aColour[4] = [0xFFFFD0, 0xD0FFD0, 0xD0D0FF, 0xFFD0FF]

$sText = &quot;The UDF will calculate the largest possible font size which will allow this text to fit in the randomly sized label.  &quot; &amp;amp; _
    &quot;Pressing the &apos;Increase&apos; button will use the next size up so you can see how successful it was.  &quot; &amp;amp; @CRLF &amp;amp; _
    &quot;Note that the UDF is pessimistic and will leave small borders to the right and at the bottom of the text, so you might &quot; &amp;amp; _
    &quot;be able to go one size up in a few cases, although this risks clipping the trailing edges of italic letters or the tails of letters such as &apos;g&apos;.&quot;

$hGUI = GUICreate(&quot;Test&quot;, 500, 500, 100, 100)

$hButton_Next = GUICtrlCreateButton(&quot;Next&quot;, 10, 10, 80, 30)
GUICtrlSetResizing(-1, $GUI_DOCKALL)

$hLabel_Size = GUICtrlCreateLabel(&quot;&quot;, 100, 10, 40, 30)
GUICtrlSetResizing(-1, $GUI_DOCKALL)
GUICtrlSetFont(-1, 24)

$hButton_Increase = GUICtrlCreateButton(&quot;Increase&quot;, 150, 10, 80, 30)
GUICtrlSetResizing(-1, $GUI_DOCKALL)

GUISetState()

While 1

    ; Choose parameter values

    $iX = 10 * Random(25, 50, 1)
    $iY = 10 * Random(10, 40, 1)
    $sFont = $aFont[Random(0, 3, 1)]
    $iWeight = $aWeight[Random(0, 3, 1)]
    $iAttrib = $aAttrib[Random(0, 3, 1)]
    $iColour = $aColour[Random(0, 3, 1)]

    WinMove($hGUI, &quot;&quot;, 100, 100, $iX + 26, $iY + 85)
    $hLabel = GUICtrlCreateLabel(&quot;&quot;, 10, 50, $iX, $iY)
    GUICtrlSetBkColor(-1, $iColour)

    For $iSize = 5 To 50
        $aSize = _StringSize($sText, $iSize, $iWeight, $iAttrib, $sFont, $iX)
    If $aSize[3] &amp;gt; $iY Then
            $iSize -= 1
            ExitLoop
        EndIf
    Next

    GUICtrlSetData($hLabel_Size, $iSize)
    GUICtrlSetFont($hLabel, $iSize, $iWeight, $iAttrib, $sFont)
    $aSize = _StringSize($sText, $iSize, $iWeight, $iAttrib, $sFont, $iX)
    GUICtrlSetData($hLabel, $aSize[0])

    While 1
        Switch GUIGetMsg()
            Case $GUI_EVENT_CLOSE
                Exit
            Case $hButton_Next
                GUICtrlDelete($hLabel)
                GUICtrlSetData($hLabel_Size, &quot;&quot;)
                ExitLoop
            Case $hButton_Increase
                GUICtrlSetData($hLabel, &quot;&quot;)
                $iSize += 1
                GUICtrlSetData($hLabel_Size, $iSize)
                GUICtrlSetFont($hLabel, $iSize, $iWeight, $iAttrib, $sFont)
                $aSize = _StringSize($sText, $iSize, $iWeight, $iAttrib, $sFont, $iX)
                GUICtrlSetData($hLabel, $aSize[0])
        EndSwitch
    WEnd

WEnd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Continue Continue la lecture ?&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://autoit-gui-skeleton.github.io//fr/documentation/getting-started#dependencies-manager-for-autoit&quot;&gt;Dependencies manager for AutoIt&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
            <pubDate>Mon, 22 Nov 2021 00:00:00 +0100</pubDate>
        </item>
        
        <item>
            <title>AutoIt coloration syntaxique dans Jetbrains</title>
            <link>/blog/2021/10/11/autoit-syntax-highlighting.html</link>
            <guid isPermaLink="true">/blog/2021/10/11/autoit-syntax-highlighting.html</guid>
            <description>&lt;blockquote&gt;
  &lt;p&gt;Procédure pour activer la coloration syntaxique d’AutoIt dans l’IDE Jetbrains.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;h1 id=&quot;activer-la-coloration-syntaxique-dans-ide-jetbrains&quot;&gt;Activer la coloration syntaxique dans IDE Jetbrains&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Ouvrir la fenetre de configuration de l’éditeur : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;File &amp;gt; Settings &amp;gt; Editor &amp;gt; TextMate Bundles&lt;/code&gt; ; &lt;img src=&quot;https://autoit-gui-skeleton.github.io//assets/img/post/autoit-syntax-highlighting.png&quot; alt=&quot;AGS GUI package and deployment process&quot; class=&quot;img-full img-fancybox&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Ajouter AutoIt bundle for Sublime Text editor en cliquant sur le bouton “plus”. Le fichier se trouve dans le répertoire de votre installation d’AutoIt &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C:\Program Files (x86)\AutoIt3\Extras\Editors\Sublime Text&lt;/code&gt;.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Et voila ! &lt;img src=&quot;https://autoit-gui-skeleton.github.io//assets/img/post/autoit-syntax-highlighting2.png&quot; alt=&quot;AGS GUI package and deployment process&quot; class=&quot;img-full img-fancybox&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
            <pubDate>Mon, 11 Oct 2021 00:00:00 +0200</pubDate>
        </item>
        
        <item>
            <title>Ajouter des actions pour AutoIt (Run, Compile, Syntax check...) dans Jetbrains</title>
            <link>/blog/2021/10/11/autoit-jetbrains.html</link>
            <guid isPermaLink="true">/blog/2021/10/11/autoit-jetbrains.html</guid>
            <description>&lt;blockquote&gt;
  &lt;p&gt;Procédure pour ajouter des actions AutoIt (Compile, Run, Syntax Check…) dans Jetbrains.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;h1 id=&quot;ajouter-une-action-autoit-dans-lide-jetbrains&quot;&gt;Ajouter une action AutoIt dans l’IDE Jetbrains&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Ouvrir &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;File &amp;gt; Settings &amp;gt; Tools &amp;gt; External Tools&lt;/code&gt; ;
&lt;img src=&quot;https://autoit-gui-skeleton.github.io//assets/img/post/autoit-external-tools-jetbrains.png&quot; alt=&quot;AutoIt Actions Jetbrains&quot; class=&quot;img-full img-fancybox&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Ajouter l’action &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Run&lt;/code&gt; de la manière suivante :
    &lt;ul&gt;
      &lt;li&gt;Ecrire &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AutoIt&lt;/code&gt; dans Group ;&lt;/li&gt;
      &lt;li&gt;Ecrire &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Run&lt;/code&gt; dans Name ;&lt;/li&gt;
      &lt;li&gt;Ecrire &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C:\Program Files (x86)\AutoIt3\AutoIt3.exe&lt;/code&gt; dans Program ;&lt;/li&gt;
      &lt;li&gt;Ecrire &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/ErrorStdOut &quot;$FilePath$&quot;&lt;/code&gt; dans Arguments ;&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Ajouter l’action &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Compile&lt;/code&gt; de la manière suivante :
    &lt;ul&gt;
      &lt;li&gt;Ecrire &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AutoIt&lt;/code&gt; dans Group ;&lt;/li&gt;
      &lt;li&gt;Ecrire &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Compile&lt;/code&gt; dans Name ;&lt;/li&gt;
      &lt;li&gt;Ecrire &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C:\Program Files (x86)\AutoIt3\Aut2Exe\Aut2exe.exe&lt;/code&gt; dans Program ;&lt;/li&gt;
      &lt;li&gt;Ecrire &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/in &quot;$FilePath$&quot;&lt;/code&gt; dans Arguments ;&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Ajouter l’action &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Syntax check&lt;/code&gt; de la manière suivante :
    &lt;ul&gt;
      &lt;li&gt;Ecrire &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AutoIt&lt;/code&gt; dans Group ;&lt;/li&gt;
      &lt;li&gt;Ecrire &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Syntax check&lt;/code&gt; dans Name ;&lt;/li&gt;
      &lt;li&gt;Ecrire &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C:\Program Files (x86)\AutoIt3\Au3Check.exe&lt;/code&gt; dans Program ;&lt;/li&gt;
      &lt;li&gt;Ecrire &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-q &quot;$FilePath$&quot;&lt;/code&gt; dans Arguments ; &lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Et voila ! &lt;img src=&quot;https://autoit-gui-skeleton.github.io//assets/img/post/autoit-actions-jetbrains.png&quot; alt=&quot;AutoIt Actions in Jetbrains&quot; class=&quot;img-full img-fancybox&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
            <pubDate>Mon, 11 Oct 2021 00:00:00 +0200</pubDate>
        </item>
        
        <item>
            <title>Comment créer un nouveau AGS-wrapper ?</title>
            <link>/blog/2018/09/01/how-to-create-a-new-AGS-wrapper.html</link>
            <guid isPermaLink="true">/blog/2018/09/01/how-to-create-a-new-AGS-wrapper.html</guid>
            <description>&lt;blockquote&gt;
  &lt;p&gt;Un AGS-wrapper est une simple enveloppe d’une bibliothèque AutoIt développé par un tiers, et qui permet de bénéficier des avantages d’un gestionnaire de dépendances.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;h1 id=&quot;comment-créer-un-nouveau-ags-wrapper-&quot;&gt;Comment créer un nouveau AGS-wrapper ?&lt;/h1&gt;

&lt;h2 id=&quot;procedure&quot;&gt;Procedure&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Créer un nouveau répertoire &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./ags-wrapper-xxx&lt;/code&gt;. Remplacer &lt;strong&gt;xxx&lt;/strong&gt; avec le nom de la librairie à encapsuler.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Ajouter un fichier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; à la racine du répertoire, et remplacer les propriétés en respectant les conventions AGS.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Ajouter un fichier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;README.md&lt;/code&gt; pour décrire le wrapper. Vous pouvez le copier depuis un autre projet pour garder la même structure de document (see https://github.com/autoit-gui-skeleton/ags-wrapper-json#readme).&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Ajouter les fichiers de la libraire à encapsuler et remplir correctement la propriété &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AGS.wrapper.main&lt;/code&gt;. Il peut être utile de créer un nouveau fichier AutoIt dans lequel nous ajouterons toutes les directives #include des fichiers de la libraire pour faciliter son utilisation. Autrement dit en incluant ce fichier, nous ajouterons tous les éléments de la bibliothèque. N’oubliez pas d’ajouter la directive &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;# include-once&lt;/code&gt;.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Créer un dépot git dans Github (ou autre).
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git init
 git add README.md
 git commit -m &quot;Init repository&quot;
 git remote add origin https://github.com/autoit-gui-skeleton/ags-wrapper-xxx.git
 git push -u orgin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Commit et push les autres fichiers, et lorsque la realse est prete, changer le numéro de version en respect du Semantic Versioning dans le fichier package.json. Ajouter également un git tag &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1.x.x&lt;/code&gt;.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Finalement publier le projet avec npm.
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; npm login
 npm publish --access public
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;conventions-ags-dun-wrapper&quot;&gt;Conventions AGS d’un wrapper&lt;/h2&gt;

&lt;p&gt;Pour décrire un wrapper AGS et ses dépendances nous utilisons naturellement le fichier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt;, spécifique à l’écosystème Node.js. Vous pouvez trouver plus d’informations sur ce fichier, et comment le remplir ici : https://yarnpkg.com/lang/en/docs/package-json/.&lt;/p&gt;

&lt;p&gt;À la racine de ce nouveau dossier, ajoutez un &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; comme suit.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;@autoit-gui-skeleton/ags-wrapper-xxx&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;AGS package for the library xxx, created by ???. This library provides features to ...&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;author&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;v20100v &amp;lt;vb20100bv@gmail.com&amp;gt; (https://github.com/v20100v)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;contributors&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;v20100v &amp;lt;vb20100bv@gmail.com&amp;gt; (https://github.com/v20100v)&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;license&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;MIT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;keywords&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;AGS&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;AutoIt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;AutoIt-GUI-Skeleton&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;AGS-wrapper&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;???&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;homepage&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://autoit-gui-skeleton.github.io/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;repository&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://github.com/autoit-gui-skeleton/ags-wrapper-xxx.git&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;git&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;bugs&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://github.com/autoit-gui-skeleton/ags-wrapper-xxx/issues&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;dependencies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;@autoit-gui-skeleton/ags-wrapper-binary-call&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^1.0.2&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;AGS&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;framework&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;AutoIt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;3.3.14.5&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;wrapper&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;main&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;xxx.au3&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Il est appréciable d’ajouter des exemples d’utilisations dans le répertoire dédié &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./examples&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;N’oubliez pas de citer les principaux auteurs de la bibliothèque qui a été encapsulée.&lt;/p&gt;

&lt;h2 id=&quot;ajouter-un-fichier-wrapper-principal&quot;&gt;Ajouter un fichier wrapper principal&lt;/h2&gt;

&lt;p&gt;Lorsque nous créons un wrapper pour une bibliothèque, il n’y a toujours pas un seul fichier AutoIt. Afin de simplifier, nous pouvons créer un fichier simple afin d’inclure tous les fichiers de la bibliothèque dans un seul appel de la directive &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#include&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Par exemple :&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-autoit&quot;&gt;; ./xxx.au3

#include-once

#include &quot;File-one.au3&quot;
#include &quot;File-two.au3&quot;
#include &quot;File-three.au3&quot;

(...)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;vérifiez-que-la-bibliothèque-est-disponible&quot;&gt;Vérifiez que la bibliothèque est disponible&lt;/h2&gt;

&lt;p&gt;Dans un dossier vide, exécutez la commande suivante pour tester l’installation du wrapper :&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yarn add @autoit-gui-skeleton/ags-wrapper-xxx --modules-folder vendor
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Lors de la résolution des packages de fil, si le package n’est pas disponible, vous obtenez une erreur comme celle-ci :&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;An unexpected error occurred: “https://registry.yarnpkg.com/@autoit-gui-skeleton%2fags-wrapper-xxx: Not found”.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Et si le package est disponible, il est installé dans le dossier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./vendor&lt;/code&gt; avec toutes ses dépendances.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://autoit-gui-skeleton.github.io//assets/img/post/ags-wrapper-installed.png&quot; alt=&quot;AGS wrapper installed&quot; class=&quot;img-full img-fancybox&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Here we go !&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Continue la lecture ?&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://autoit-gui-skeleton.github.io//fr/documentation/getting-started#dependencies-manager-for-autoit&quot;&gt;Dependencies manager for AutoIt&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
            <pubDate>Sat, 01 Sep 2018 00:00:00 +0200</pubDate>
        </item>
        
        <item>
            <title>Vérifier les mises à jour dans une application AutoIt avec &lt;b&gt;AGS-component-check-for-updates&lt;/b&gt;</title>
            <link>/blog/2018/07/18/ags_component_check-for-updates.html</link>
            <guid isPermaLink="true">/blog/2018/07/18/ags_component_check-for-updates.html</guid>
            <description>&lt;blockquote&gt;
  &lt;p&gt;AGS fournit le composant &lt;a href=&quot;https://www.npmjs.com/package/@autoit-gui-skeleton/ags-component-check-for-updates&quot;&gt;@autoit-gui-skeleton/ags-component-check-for-updates&lt;/a&gt; afin d’ajouter la fonctionnalité pour vérifier les mises à jour dans une application AutoIt.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;h1 id=&quot;comment-installer-ags-component-check-for-updates-&quot;&gt;Comment installer AGS-component-check-for-updates ?&lt;/h1&gt;

&lt;p&gt;On suppose que vous avez déjà installé &lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; et &lt;a href=&quot;https://yarnpkg.com/lang/en/&quot;&gt;Yarn&lt;/a&gt;, par example avec &lt;a href=&quot;https://chocolatey.org/&quot;&gt;Chocolatey&lt;/a&gt;, et pour installer le package AGS-component-check-for-updatest, vous pouvez alors utiliser le gestionnaire de dépendances pour AutoIt fournit dans AGS. Il suffit donc de taper dans le dossier racine du projet, où le fichier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; est stocké:&lt;/p&gt;

&lt;pre class=&quot;command-line&quot; data-prompt=&quot;C: \&amp;gt;&quot;&gt;
&lt;code class=&quot; language-bash&quot;&gt;yarn add @autoit-gui-skeleton/ags-component-check-for-updates --modules-folder vendor&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;Toutes les dépendances du projet, ainsi que les dépendances filles des dépedances parentes sont installées dans le répertoire &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./vendor/@autoit-gui-skeleton/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Tous les paquets AGS hébergés dans le dépôt npmjs appartiennent à l’organisation &lt;a href=&quot;https://www.npmjs.com/search?q=autoit-gui-skeleton&quot;&gt;@autoit-gui-skeleton organization&lt;/a&gt;. En effet afin de simplifier la gestion des dépendances d’un projet AutoIt construit avec le framework AGS, nous avons détourné de son utilisation initiale le gestionnaire de dépendance npm, et son évolution Yarn. Cela nous permet de gérer les dépendances d’un projet AGS avec d’autres bibliothèques AutoIt, et de partager ces paquets AutoIt à partir du référentiel npmjs.org.&lt;/p&gt;

&lt;h1 id=&quot;comment-utilsier-ags-component-check-for-updates-&quot;&gt;Comment utilsier AGS-component-check-for-updates ?&lt;/h1&gt;

&lt;h2 id=&quot;description&quot;&gt;Description&lt;/h2&gt;

&lt;p&gt;Avec AGS-component-check-for-updates, vous pouvez créer une application AutoIt disposant d’une fonctionnalité pour vérifier ses propres mises à jour. Il fournit alors un lien pour télécharger la dernière version de l’installeur, et un autre lien vers les notes de versions.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/autoit-gui-skeleton/ags-component-check-for-updates/master/example/ApplicationWithCheckForUpdates/docs/AGS-component-check-for-updates-update-available.png&quot; alt=&quot;ags-component-check-for-updates :: update available&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pour fonctionner, il compare la version locale de l’application installée sur le PC de l’utilisateur avec le référentiel des versions publiées de l’application. Ce référentiel est un fichier json, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RELEASES.json&lt;/code&gt;, qui est hébergé sur un serveur distant. Nous devons donc nous connecter à Internet pour envoyer une requête HTTP pour récupérer ce fichier, et nous avons besoin d’une analyse JSON. Ce composant dépend donc des autres composants AGS: ags-wrapper-json et ags-component-http-request. Si vous souhaitez simuler différents scénarios de vérification des mises à jour, il vous suffit de modifier la valeur de l’ensemble des versions de l’application dans &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./src/GLOBALS.au3&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Le fichier distant &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RELEASES.json&lt;/code&gt; ressemble à ceci:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ApplicationWithCheckForUpdates&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Example to implementation of AGS-component-check-for-updates&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;license&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;MIT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;homepage&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://autoit-gui-skeleton.github.io&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;releases&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;state&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;stable&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;downloadSetup&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://myApplication.com/v1.0.0/setup_myApplication_v1.0.0.exe&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;published&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2018-10-07&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;releaseNotes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://myApplication.com/v1.0.0/README.md&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0.1.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;state&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;prototype&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;downloadSetup&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;undefined&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;published&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2014-03-21&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;releaseNotes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;undefined&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;exemple-dune-application-qui-implémente-ags-component-check-for-updates&quot;&gt;Exemple d’une application qui implémente AGS-component-check-for-updates&lt;/h2&gt;

&lt;p&gt;Jetez un oeil à cet exemple &lt;a href=&quot;https://github.com/autoit-gui-skeleton/AGS-component-check-for-updates/tree/master/example/ApplicationWithCheckForUpdates&quot;&gt;ApplicationWithCheckForUpdates&lt;/a&gt;. Cette application a des caractéristiques intéressantes :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Vérifier la mise à jour au démarrage de l’application AutoIt;&lt;/li&gt;
  &lt;li&gt;Vérifier la mise à jour depuis le menu “?&amp;gt; Vérifier la mise à jour”;&lt;/li&gt;
  &lt;li&gt;Modifierles paramètres de l’application à partir de la vue “Configuration&amp;gt; Paramètres”. Les valeurs sont conservées dans le fichier de configuration &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./config/parameters.ini&lt;/code&gt;. Dans cette vue, nous pouvons définir des paramètres proxy pour spécifier comment cette application essaie de se connecter à Internet.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Si l’option de vérification de recherche de mise à jour de l’application à chaque démarrage est activée, et si une nouvelle version de cette application est disponible, alors lorsque l’utilisateur démarre l’application, il donne cette information dans une fenêtre enfant.&lt;/p&gt;

&lt;h2 id=&quot;méthodes-disponibles&quot;&gt;Méthodes disponibles&lt;/h2&gt;

&lt;p&gt;Cette bibliothèque fournit plusieurs méthodes&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Methods&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;json_decode_from_file($filePath)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Decode JSON from a given local file.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;json_decode_from_url($jsonfileUrl, $proxy = &quot;&quot;)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Decode JSON from a given URL.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RELEASES_JSON_get_all_versions($jsonObject)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Parse all defined version(s) persisted in a decoded RELEASES.json file given.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RELEASES_JSON_get_last_version($jsonObject)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Get last version persisted in RELEASES.json&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CheckForUpdates($currentApplicationVersion, $remoteUrlReleasesJson, $proxy = &quot;&quot;)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Compare the current version with the last version persisted in an remote RELEASES.json file, in order to check if an update is available.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_GUI_launch_CheckForUpdates($main_GUI, $context)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Launch a check for updates. The build of a GUI exposing the results depends on the context when the check for update is launch : with an user interaction from menu or on startup application. We store the option to search update on starup in the configuration file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./config/parameters.ini&lt;/code&gt; in parameter &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LAUNCH_CHECK_FOR_UPDATE_ON_STARTUP&lt;/code&gt;.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_GUI_build_view_to_CheckForUpdates($main_GUI, $resultCheckForUpdate, $context = &quot;&quot;)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Create a child GUI use to expose the result of a check updater. It exposes if an update of current application is available. The child GUI is related to a given main GUI of application. If this method is execute on startup, we built this child GUI only if an update is available. And when this method is called by a user interaction, we built this child GUI in any case : no update available, new update or experimental.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;configurer-le-composant-ags-component-check-for-updates&quot;&gt;Configurer le composant AGS-component-check-for-updates&lt;/h2&gt;

&lt;h3 id=&quot;création-du-fichier-de-configuration-configparametersini&quot;&gt;Création du fichier de configuration &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./config/parameters.ini&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Avec AGS vous devez avoir un fichier de configuration &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./config/parameters.ini&lt;/code&gt;. Ce fichier ne doit pas être sauvegarder avec le contrôle de version. Vous pouvez utiliser &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./config/parameters.ini.dist&lt;/code&gt; comme un ‘template’ de ce à quoi devrait ressembler votre fichier parameters.ini. Définissez les paramètres ici qui peuvent être différents sur chaque application.&lt;/p&gt;

&lt;p&gt;Pour configurer le comportement de ce composant, vous pouvez définir ses options dans ce fichier de configuration. Vous pouvez activer ou désactiver la recherche d’une nouvelle mise à jour lorsque l’application démarre, avec la variable &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LAUNCH_CHECK_FOR_UPDATE_ON_STARTUP&lt;/code&gt; de la section &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AGS_CHECK_FOR_UPDATES&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-ini highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;[AGS_CHECK_FOR_UPDATES]&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;; [REQUIRED] Enable/disable the search of a new update on start-up.
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;LAUNCH_CHECK_FOR_UPDATE_ON_STARTUP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Dans ce composant, on utilise un autre composant &lt;a href=&quot;https://www.npmjs.com/package/@autoit-gui-skeleton/ags-component-http-request&quot;&gt;AGS-component-http-request&lt;/a&gt;. Cette bibliothèque est utilisée pour envoyer une requête HTTP avec la méthode GET ou POST, et avec ou sans un proxy, afin d’obtenir le fichier distant &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RELEASES.json&lt;/code&gt;. Vous pouvez donc également configurer ce composant. Par exemple, vous pouvez définir un proxy pour toutes les connexions HTTP ou définir différents types de délais. Par défaut, ce composant recherche dans le fichier de configuration si un proxy est défini dans la variable &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PROXY&lt;/code&gt; de la section&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; AGS_HTTP_REQUEST&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-ini highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;[AGS_HTTP_REQUEST]&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;; [OPTIONAL] Use a proxy for http connexion or choose NONE to disable it
# PROXY=NONE
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;PROXY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;http://myProxy.com:20100&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;définir-les-constantes-dans-srcglobalsau3&quot;&gt;Définir les constantes dans &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./src/GLOBALS.au3&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Toutes les constantes et les variables globales sont définies à un seul endroit &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./src/GLOBALS.au3&lt;/code&gt;, à l’exception des variables globales des éléments graphiques qui sont définies dans chaque fichier de vue spécifique. AGS-component-check-for-udpates utilise la constante &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$APP_REMOTE_RELEASES_JSON&lt;/code&gt; pour spécifier où le référentiel&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; RELEASES.json&lt;/code&gt; est hébergé.&lt;/p&gt;

&lt;p&gt;Ce fichier json doit être sauvegarder dans un serveur distant disponible via internet, et sans restriction. Par exemple, vous pouvez utiliser Github pour héberger ce fichier, comme ceci:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-autoit&quot;&gt;Global Const $APP_REMOTE_RELEASES_JSON = &quot;https://raw.githubusercontent.com/autoit-gui-skeleton/AGS-component-check-for-updates/master/example/ApplicationWithCheckForUpdates/RELEASES.json&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;comment-effectuer-une-recherche-de-mise-à-jour-au-démarrage-&quot;&gt;Comment effectuer une recherche de mise à jour au démarrage ?&lt;/h3&gt;

&lt;p&gt;Dans la méthode &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_main_GUI()&lt;/code&gt; du manager principal de l’interface utilisateur &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./src/GUI.au3&lt;/code&gt;, il suffit d’ajouter un appel à la méthode &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_GUI_launch_CheckForUpdates&lt;/code&gt; comme ceci.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-autoit&quot;&gt;;; ./src/GUI.au3 ;;

Func _main_GUI()
	Global $main_GUI = GUICreate($APP_NAME, $APP_WIDTH, $APP_HEIGHT, -1, -1)

	_GUI_Init_Menu()
	_GUI_Init_Footer()
	_GUI_Init_View_Welcome()
	_GUI_Init_View_About()
	_GUI_Init_View_Settings()

	; Set configuration application : icon, background color
	_GUI_Configuration()

	; Show Welcome view on startup
	_GUI_ShowHide_View_Welcome($GUI_SHOW)
	GUISetState(@SW_SHOW)

	; Launch a check for updates on startup, the check is performed 
	; only if LAUNCH_CHECK_FOR_UPDATE_ON_STARTUP is enable in
	; the configuration file &apos;./config/parameters.ini&apos;
	_GUI_launch_CheckForUpdates($main_GUI, &quot;ON_STARTUP&quot;)

	; Handle all user interactions and events
	_GUI_HandleEvents()

	GUIDelete()
	Exit
EndFunc
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;comment-effectuer-une-recherche-de-mise-à-jour-depuis-un-élement-du-menu-&quot;&gt;Comment effectuer une recherche de mise à jour depuis un élement du menu ?&lt;/h3&gt;

&lt;p&gt;Dans la méthode &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GUI_Init_Menu&lt;/code&gt;, on ajoute un nouvel item pour vérifier les mises à jour.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-autoit&quot;&gt;;; ./src/GUI.au3 ;;

Func _GUI_Init_Menu()

    (...)
    
	; Création &apos;About&apos; menu
	Global $menu_About = GUICtrlCreateMenu(&quot;?&quot;)
	Global $menuitem_Help = GUICtrlCreateMenuItem(&quot;Help&quot;, $menu_About)
	Global $menuitem_CheckForUpdate = GUICtrlCreateMenuItem(&quot;Check for update&quot;, $menu_About)
EndFunc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Et on traite les évenements de clics sur le menu “About” comme ceci.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-autoit&quot;&gt;;; ./src/GUI.au3 ;;

Func _GUI_HandleEvents_Menu_About($msg)
	Switch $msg
		Case $menuitem_Help
			ConsoleWrite(&apos;Click on &quot;? &amp;gt; Help&quot;&apos; &amp;amp; @CRLF)
		
		Case $menuitem_CheckForUpdate
			_GUI_launch_CheckForUpdates($main_GUI, &quot;ON_MENU&quot;)
EndFunc
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;lutilisateur-peut-modifier-les-paramètres-directement-dans-lapplication&quot;&gt;L’utilisateur peut modifier les paramètres directement dans l’application&lt;/h3&gt;

&lt;p&gt;Vous pouvez créer une vue dans l’application afin de modifier ses paramètres. Toutes les valeurs sont conservées dans le fichier de configuration &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./config/parameters.ini&lt;/code&gt;. Dans cette vue, nous pouvons définir des paramètres proxy pour spécifier comment cette application essaie de se connecter à Internet et si l’application recherche une mise à jour au démarrage.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/autoit-gui-skeleton/ags-component-check-for-updates/master/example/ApplicationWithCheckForUpdates/docs/AGS-component-check-for-updates-view-settings.png&quot; alt=&quot;AGS-component-check-for-updates :: view settings application&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lorsque l’utilisateur clique sur le bouton Enregistrer, il utilise le service &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./src/services/ParametersIni.au3&lt;/code&gt;, qui appelle la méthode&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; IniWrite&lt;/code&gt; sur le fichier de configuration &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./config/parameters.ini&lt;/code&gt; pour sauvegarder les changements.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-autoit&quot;&gt;;====================================================================================
; Save values choose by user in &apos;Setting&apos; views, and launch with &apos;save&apos; button
;
; @params void
; @return void
;====================================================================================
Func _save_parameters_ini()
	; Save proxy settings
	IniWrite($APP_PARAMETERS_INI, &quot;AGS_HTTP_REQUEST&quot;, &quot;PROXY&quot;, GUICtrlRead($input_HTTP_Proxy))
	IniWrite($APP_PARAMETERS_INI, &quot;AGS_HTTP_REQUEST&quot;, &quot;RESOLVE_TIMEOUT&quot;, GUICtrlRead($input_HTTP_Resolve_Timeout))
	IniWrite($APP_PARAMETERS_INI, &quot;AGS_HTTP_REQUEST&quot;, &quot;CONNECT_TIMEOUT&quot;, GUICtrlRead($input_HTTP_Connect_Timeout))
	IniWrite($APP_PARAMETERS_INI, &quot;AGS_HTTP_REQUEST&quot;, &quot;SEND_TIMEOUT&quot;, GUICtrlRead($input_HTTP_Send_Timeout))
	IniWrite($APP_PARAMETERS_INI, &quot;AGS_HTTP_REQUEST&quot;, &quot;RECEIVE_TIMEOUT&quot;, GUICtrlRead($input_HTTP_Receive_Timeout))

	; Startup settings
	If (GUICtrlRead($checkbox_STARTUP_CHECK_UPDATE) = $GUI_CHECKED) Then
		IniWrite($APP_PARAMETERS_INI, &quot;AGS_CHECK_FOR_UPDATES&quot;, &quot;LAUNCH_CHECK_FOR_UPDATE_ON_STARTUP&quot;, &quot;1&quot;)
	Else
		IniWrite($APP_PARAMETERS_INI, &quot;AGS_CHECK_FOR_UPDATES&quot;, &quot;LAUNCH_CHECK_FOR_UPDATE_ON_STARTUP&quot;, &quot;0&quot;)
	EndIf
EndFunc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Et le code source du gestionnaire de la vue “Settings”&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-autoit&quot;&gt;;; ./src/views/View_Settings.au3 ;;

#include-once

;====================================================================================
; Create element for the &apos;Settings&apos; view
;
; @param void
; @return void
;====================================================================================
Func _GUI_Init_View_Settings()
	GUISetFont(20, 800, 0, &quot;Arial Narrow&quot;)
	Global $label_title_settings = GUICtrlCreateLabel(&quot;Settings&quot;, 20, 30, 400)
	GUICtrlSetColor($label_title_settings, 0x85C4ED)
	GUICtrlSetBkColor($label_title_settings, $GUI_BKCOLOR_TRANSPARENT)

	Local $height = 120
	Local $heightStep = 30
	Local $margin_top = 50

	; Proxy settings
	GUISetFont(9, 800, 0, &quot;Arial&quot;)
	Local $height_group_proxy_settings = (5 * $heightStep) + 30
	Global $group_proxy_settings = GUICtrlCreateGroup(&quot; Proxy &quot;, 30, $height - 30, ($APP_WIDTH - 60), $height_group_proxy_settings)
	GUISetFont(9, 400, 0, &quot;Arial&quot;)
	Local $PROXY = IniRead($APP_PARAMETERS_INI, &quot;AGS_HTTP_REQUEST&quot;, &quot;PROXY&quot;, &quot;&quot;)
	Local $RESOLVE_TIMEOUT = Int(IniRead($APP_PARAMETERS_INI, &quot;AGS_HTTP_REQUEST&quot;, &quot;RESOLVE_TIMEOUT&quot;, 0))
	Local $CONNECT_TIMEOUT = Int(IniRead($APP_PARAMETERS_INI, &quot;AGS_HTTP_REQUEST&quot;, &quot;CONNECT_TIMEOUT&quot;, 60000))
	Local $SEND_TIMEOUT = Int(IniRead($APP_PARAMETERS_INI, &quot;AGS_HTTP_REQUEST&quot;, &quot;SEND_TIMEOUT&quot;, 30000))
	Local $RECEIVE_TIMEOUT = Int(IniRead($APP_PARAMETERS_INI, &quot;AGS_HTTP_REQUEST&quot;, &quot;RECEIVE_TIMEOUT&quot;, 30000))
	Global $label_HTTP_Proxy = GUICtrlCreateLabel(&quot;HTTP / HTTPS Proxy&quot;, 50, $height)
	Global $input_HTTP_Proxy = GUICtrlCreateInput($PROXY, 200, $height - 2, 400, 20)
	Global $label_HTTP_Resolve_Timeout = GUICtrlCreateLabel(&quot;Timeout for HTTP resolve&quot;, 50, $height + $heightStep)
	Global $input_HTTP_Resolve_Timeout = GUICtrlCreateInput($RESOLVE_TIMEOUT, 200, $height + $heightStep - 2, 100, 20)
	Global $label_HTTP_Connect_Timeout = GUICtrlCreateLabel(&quot;Timeout for HTTP connect&quot;, 50, $height + 2 * $heightStep)
	Global $input_HTTP_Connect_Timeout = GUICtrlCreateInput($CONNECT_TIMEOUT, 200, $height + 2 * $heightStep - 2, 100, 20)
	Global $label_HTTP_Send_Timeout = GUICtrlCreateLabel(&quot;Timeout for HTTP send&quot;, 50, $height + 3 * $heightStep)
	Global $input_HTTP_Send_Timeout = GUICtrlCreateInput($SEND_TIMEOUT, 200, $height + 3 * $heightStep - 2, 100, 20)
	Global $label_HTTP_Receive_Timeout = GUICtrlCreateLabel(&quot;Timeout for HTTP receive&quot;, 50, $height + 4 * $heightStep)
	Global $input_HTTP_Receive_Timeout = GUICtrlCreateInput($RECEIVE_TIMEOUT, 200, $height + 4 * $heightStep - 2, 100, 20)
	GUICtrlCreateGroup(&quot;&quot;, -1, -1, 1, 1)

	; Startup settings
	$height = $height + $height_group_proxy_settings
	GUISetFont(9, 800, 0, &quot;Arial&quot;)
	Global $group_startup_settings = GUICtrlCreateGroup(&quot; Start-up &quot;, 30, $height, ($APP_WIDTH - 60), (1 * $heightStep) + 30)
	GUISetFont(9, 400, 0, &quot;Arial&quot;)
	Global $checkbox_STARTUP_CHECK_UPDATE = GUICtrlCreateCheckbox( _
			&quot;Search update on application startup ?&quot;, _
			50, $height + $heightStep, Default, 20, $BS_RIGHTBUTTON _
			)
	Local $LAUNCH_CHECK_FOR_UPDATE_ON_STARTUP = Int(IniRead($APP_PARAMETERS_INI, &quot;AGS_CHECK_FOR_UPDATES&quot;, &quot;LAUNCH_CHECK_FOR_UPDATE_ON_STARTUP&quot;, &quot;NotFound&quot;))
	If ($LAUNCH_CHECK_FOR_UPDATE_ON_STARTUP = 1) Then
		GUICtrlSetState($checkbox_STARTUP_CHECK_UPDATE, $GUI_CHECKED)
	Else
		GUICtrlSetState($checkbox_STARTUP_CHECK_UPDATE, $GUI_UNCHECKED)
	EndIf
	GUICtrlCreateGroup(&quot;&quot;, -1, -1, 1, 1)

	Global $button_save_settings = GUICtrlCreateButton(&quot;Save&quot;, ($APP_WIDTH - 150) / 2, $APP_HEIGHT - 100, 150)

	; Setter of tips and cursors
	_GUI_SetCursorAndTip_View_Settings()

	; Hide all elements by default
	_GUI_ShowHide_View_Settings($GUI_HIDE)
EndFunc


;====================================================================================
; Setter tips and cursor for elements in &apos;Settings&apos; view
;
; @param void
; @return void
;====================================================================================
Func _GUI_SetCursorAndTip_View_Settings()
	GUICtrlSetCursor($label_HTTP_Proxy, 4)
	GUICtrlSetTip($label_HTTP_Proxy, @CRLF &amp;amp; &quot;Configuration of proxy to allow internet connection&quot; &amp;amp; @CRLF &amp;amp; @CRLF &amp;amp; &quot;Example : http(s):\\myProxy.com:8080&quot;, &quot;HTTP/HTTPS Proxy&quot;, 1)

	GUICtrlSetCursor($checkbox_STARTUP_CHECK_UPDATE, 4)
	GUICtrlSetTip($checkbox_STARTUP_CHECK_UPDATE, @CRLF &amp;amp; &quot;To allow the search of an update of the application at each start.&quot; &amp;amp; @CRLF &amp;amp; &quot;This search requires an internet connection, and therefore&quot; &amp;amp; @CRLF &amp;amp; &quot;potenially need a configuration of a proxy.&quot;, &quot;Check for update on start-up&quot;, 1)

	GUICtrlSetCursor($button_save_settings, 0)
EndFunc


;====================================================================================
; Handler for display element on &apos;Settings&apos; view
;
; @param {int} $action, use GUIConstantsEx $GUI_SHOW or $GUI_HIDE
; @return void
;====================================================================================
Func _GUI_ShowHide_View_Settings($action)
	Switch $action
		Case $GUI_SHOW
			_GUI_Hide_all_view()
			; Define here all elements to show when user come into this view
			GUICtrlSetState($label_title_settings, $GUI_SHOW)
			GUICtrlSetState($group_proxy_settings, $GUI_SHOW)
			GUICtrlSetState($label_HTTP_Proxy, $GUI_SHOW)
			GUICtrlSetState($input_HTTP_Proxy, $GUI_SHOW)
			GUICtrlSetState($label_HTTP_Resolve_Timeout, $GUI_SHOW)
			GUICtrlSetState($input_HTTP_Resolve_Timeout, $GUI_SHOW)
			GUICtrlSetState($label_HTTP_Connect_Timeout, $GUI_SHOW)
			GUICtrlSetState($input_HTTP_Connect_Timeout, $GUI_SHOW)
			GUICtrlSetState($label_HTTP_Send_Timeout, $GUI_SHOW)
			GUICtrlSetState($input_HTTP_Send_Timeout, $GUI_SHOW)
			GUICtrlSetState($label_HTTP_Receive_Timeout, $GUI_SHOW)
			GUICtrlSetState($input_HTTP_Receive_Timeout, $GUI_SHOW)
			GUICtrlSetState($group_startup_settings, $GUI_SHOW)
			GUICtrlSetState($checkbox_STARTUP_CHECK_UPDATE, $GUI_SHOW)
			GUICtrlSetState($button_save_settings, $GUI_SHOW)

		Case $GUI_HIDE
			; Define here all elements to hide when user leave this view
			GUICtrlSetState($label_title_settings, $GUI_HIDE)
			GUICtrlSetState($group_proxy_settings, $GUI_HIDE)
			GUICtrlSetState($label_HTTP_Proxy, $GUI_HIDE)
			GUICtrlSetState($input_HTTP_Proxy, $GUI_HIDE)
			GUICtrlSetState($label_HTTP_Resolve_Timeout, $GUI_HIDE)
			GUICtrlSetState($input_HTTP_Resolve_Timeout, $GUI_HIDE)
			GUICtrlSetState($label_HTTP_Connect_Timeout, $GUI_HIDE)
			GUICtrlSetState($input_HTTP_Connect_Timeout, $GUI_HIDE)
			GUICtrlSetState($label_HTTP_Send_Timeout, $GUI_HIDE)
			GUICtrlSetState($input_HTTP_Send_Timeout, $GUI_HIDE)
			GUICtrlSetState($label_HTTP_Receive_Timeout, $GUI_HIDE)
			GUICtrlSetState($input_HTTP_Receive_Timeout, $GUI_HIDE)
			GUICtrlSetState($group_startup_settings, $GUI_HIDE)
			GUICtrlSetState($checkbox_STARTUP_CHECK_UPDATE, $GUI_HIDE)
			GUICtrlSetState($button_save_settings, $GUI_HIDE)

	EndSwitch
EndFunc


;====================================================================================
; Handler for events in &apos;Settings&apos; view
;
; @param $msg, event return with GUIGetMsg method, i.e. the control ID of the control sending the message
; @return @void
;====================================================================================
Func _GUI_HandleEvents_View_Settings($msg)
	Switch $msg
		Case $button_save_settings
			ConsoleWrite(&apos;Click on &quot;$button_save_settings&quot;&apos; &amp;amp; @CRLF)
			_save_parameters_ini()
	EndSwitch
EndFunc
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;comment-tester-les-différents-cas-de-recherche-de-mise-à-jour-&quot;&gt;Comment tester les différents cas de recherche de mise à jour ?&lt;/h3&gt;

&lt;p&gt;Dans cet example, nous avons défini deux versions comme ceci:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ApplicationWithCheckForUpdates&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Example to implementation of AGS-component-check-for-updates&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;license&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;MIT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;homepage&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://autoit-gui-skeleton.github.io&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;releases&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;state&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;stable&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;downloadSetup&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://myApplication.com/v1.0.0/setup_myApplication_v1.0.0.exe&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;published&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2018-10-07&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;releaseNotes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://myApplication.com/v1.0.0/README.md&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0.9.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;state&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;prototype&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;downloadSetup&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;undefined&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;published&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2014-03-21&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;releaseNotes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;undefined&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Si vous voulez simuler différents scénarios sur la recherche de mise à jour de chèques, il vous suffit de changer la valeur de la version de l’application définie dans &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./src/GLOBALS.au3&lt;/code&gt;. Par exemple pour simuler le cas de:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;une nouvelle version disponbile, changer la valeur pour : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Global Const $APP_VERSION = &quot;0.9.0&quot;&lt;/code&gt; &lt;br /&gt;&lt;br /&gt;&lt;img src=&quot;https://raw.githubusercontent.com/autoit-gui-skeleton/ags-component-check-for-updates/master/example/ApplicationWithCheckForUpdates/docs/AGS-component-check-for-updates-update-available.png&quot; alt=&quot;ags-component-check-for-updates :: update available&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;il n’y a pas de nouvelle version disponible : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Global Const $APP_VERSION = &quot;1.0.0&quot;&lt;/code&gt; &lt;br /&gt;&lt;br /&gt; &lt;img src=&quot;https://raw.githubusercontent.com/autoit-gui-skeleton/ags-component-check-for-updates/master/example/ApplicationWithCheckForUpdates/docs/AGS-component-check-for-updates-no-update-available.png&quot; alt=&quot;AGS-component-check-for-updates :: no update available&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;vous utilisez une version experimental : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Global Const $APP_VERSION = &quot;1.1.0&quot;&lt;/code&gt; &lt;br /&gt;&lt;br /&gt;
 &lt;img src=&quot;https://raw.githubusercontent.com/autoit-gui-skeleton/ags-component-check-for-updates/master/example/ApplicationWithCheckForUpdates/docs/AGS-component-check-for-updates-experimental.png&quot; alt=&quot;AGS-component-check-for-updates :: experimental version&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Continue la lecture ?&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://autoit-gui-skeleton.github.io//fr/documentation/getting-started#dependencies-manager-for-autoit&quot;&gt;Dependencies manager for AutoIt&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
            <pubDate>Wed, 18 Jul 2018 00:00:00 +0200</pubDate>
        </item>
        
        <item>
            <title>Envoyer une requête HTTP en AutoIt avec &lt;b&gt;AGS-component-http-request&lt;/b&gt;</title>
            <link>/blog/2018/07/17/ags_component_http_request.html</link>
            <guid isPermaLink="true">/blog/2018/07/17/ags_component_http_request.html</guid>
            <description>&lt;blockquote&gt;
  &lt;p&gt;Pour envoyer des requêtes HTTP, AGS fournit ce composant &lt;a href=&quot;https://www.npmjs.com/package/@autoit-gui-skeleton/ags-component-http-request&quot;&gt;@autoit-gui-skeleton/ags-component-http-request&lt;/a&gt;. Cette librairie nous permet d’envoyer des requêtes HTTP en GET ou en POST, et avec ou sans un proxy.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;h1 id=&quot;comment-installer-ags-component-http-request-&quot;&gt;Comment installer AGS-component-http-request ?&lt;/h1&gt;

&lt;p&gt;On suppose que vous avez déjà installé &lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; et &lt;a href=&quot;https://yarnpkg.com/lang/en/&quot;&gt;Yarn&lt;/a&gt;, par example avec &lt;a href=&quot;https://chocolatey.org/&quot;&gt;Chocolatey&lt;/a&gt;, et pour installer le package AGS-component-http-request, vous pouvez alors utiliser le gestionnaire de dépendances pour AutoIt fournit dans AGS. Il suffit donc de taper dans le dossier racine du projet, où le fichier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; est stocké:&lt;/p&gt;

&lt;pre class=&quot;command-line&quot; data-prompt=&quot;C: \&amp;gt;&quot;&gt;
&lt;code class=&quot; language-bash&quot;&gt;yarn add @autoit-gui-skeleton/ags-component-http-request --modules-folder vendor&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;Toutes les dépendances du projet, ainsi que les dépendances filles des dépedances parentes sont installées dans le répertoire &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./vendor/@autoit-gui-skeleton/&lt;/code&gt;. Pour l’utiliser dans son programme AutoIt, vous devez inclure cette bibliothèque avec l’instruction:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-autoit&quot;&gt;#include &apos;vendor/@autoit-gui-skeleton/ags-component-http-request/ags-component-http-request.au3&apos;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tous les paquets AGS hébergés dans le dépôt npmjs appartiennent à l’organisation &lt;a href=&quot;https://www.npmjs.com/search?q=autoit-gui-skeleton&quot;&gt;@autoit-gui-skeleton organization&lt;/a&gt;. En effet afin de simplifier la gestion des dépendances d’un projet AutoIt construit avec le framework AGS, nous avons détourné de son utilisation initiale le gestionnaire de dépendance npm, et son évolution Yarn. Cela nous permet de gérer les dépendances d’un projet AGS avec d’autres bibliothèques AutoIt, et de partager ces paquets AutoIt à partir du référentiel npmjs.org.&lt;/p&gt;

&lt;h1 id=&quot;comment-utiliser-ags-component-http-request-&quot;&gt;Comment utiliser AGS-component-http-request ?&lt;/h1&gt;

&lt;h2 id=&quot;méthodes-disponibles&quot;&gt;Méthodes disponibles&lt;/h2&gt;

&lt;p&gt;Cette bibliothèque fournit plusieurs méthodes pour traiter les requêtes HTTP&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Methods&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HttpGET($url, $data = &quot;&quot;, $proxy = &quot;&quot;)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Send HTTP request with GET method.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HttpPOST($url, $data = &quot;&quot;, $proxy = &quot;&quot;)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Send HTTP request with POST method.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;URLEncode($urlText)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;URL encoding replaces unsafe ASCII characters.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;URLDecode($urlText)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Inverse operation of URLEncode.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WinHttp_SetProxy_from_configuration_file($oHttp)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Set timeouts by parsing the configuration file AGS project store in ‘./config/parameters.ini’.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WinHttp_SetProxy_from_configuration_file($oHttp)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Set proxy by parsing the configuration file AGS project store in ‘./config/parameters.ini’.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;configurer-le-composant-ags-component-http-request&quot;&gt;Configurer le composant AGS-component-http-request&lt;/h2&gt;

&lt;p&gt;Pour configurer le comportement de ce composant, vous pouvez définir ses options dans le fichier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./config/parameters.ini&lt;/code&gt;. Par exemple, vous pouvez définir un proxy pour toute les connexions HTTP, ou encore définir différents types de délai d’attente. Par défaut, ce composant recherche dans le fichier de configuration si un proxy est défini dans la variable &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PROXY&lt;/code&gt; de la section&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; AGS_HTTP_REQUEST&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-ini highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;## ./config/parameters.ini ##
&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;[AGS_HTTP_REQUEST]&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;; [OPTIONAL] Use a proxy for http connexion. Keep empty to disable it.
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;PROXY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;http:/myproxy.com:20100&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;; [OPTIONAL] Time-out value applied when resolving a host name to an @IP,
; in miliseconds.
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;RESOLVE_TIMEOUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;1000&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;; [OPTIONAL] Time-out value applied when establishing a communication socket
; with the target server, in milliseconds.
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;CONNECT_TIMEOUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;1000&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;; [OPTIONAL] Time-out value applied when sending an individual packet of request
; data on the communication socket to the target server, in milliseconds. A
; large request sent to an HTTP server are normally be broken up into multiple
; packets. The send time-out applies to sending each packet individually.
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;SEND_TIMEOUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;1000&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;; [OPTIONAL] Time-out value applied when receiving a packet of response data
; from the target server, in milliseconds. Large responses are be broken up into
; multiple packets; the receive time-out applies to fetching each packet of data
; off the socket.
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;RECEIVE_TIMEOUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;1000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;comment-envoyer-une-requête-http-en-get-&quot;&gt;Comment envoyer une requête HTTP en GET ?&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-autoit&quot;&gt;Local $response = HttpGET(&quot;https://soundcloud.com/2080/my-megadrive&quot;)
    
ConsoleWrite($response.Status &amp;amp; @CRLF)
ConsoleWrite($response.ResponseText)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;comment-envoyer-une-requête-http-avec-un-proxy-&quot;&gt;Comment envoyer une requête HTTP avec un proxy ?&lt;/h3&gt;

&lt;p&gt;Par défaut, ce composant recherche dans le fichier de configuration si un proxy est défini dans la variable &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PROXY&lt;/code&gt; de la section&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; AGS_HTTP_REQUEST&lt;/code&gt;. Mais vous pouvez également fournir un proxy explicitement dans la méthode.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-autoit&quot;&gt;Local $response = HttpGET( _ 
    &quot;https://soundcloud.com/2080/my-megadrive&quot;, _ 
    default, _ 
    &quot;http://myproxy.com:20100&quot;)
    
ConsoleWrite($response.Status &amp;amp; @CRLF)
ConsoleWrite($response.ResponseText)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;comment-encoder-une-url-&quot;&gt;Comment encoder une URL ?&lt;/h3&gt;

&lt;p&gt;Le codage d’URL (URL encoding) est un mécanisme d’encodage d’informations dans un URI (Uniform Resource Identifier). Il est utilisé dans la préparation des données du type de support application/x-www-form-urlencoded, et lors de la soumission de données dans les requêtes HTTP.&lt;/p&gt;

&lt;p&gt;Si vous utilisez HttpGET, vous devez nettoyer les données à envoyer avec cet méthode au préalable.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-autoit&quot;&gt;Local $msg = &quot;Welcome in AGS&quot;
Local $url = &quot;https://myServer.org/foo?msg=&quot; &amp;amp; URLEncode($msg) &amp;amp; &quot;&amp;amp;param=32&quot;

ConsoleWrite($url)
; Output &amp;gt;&amp;gt; https://myServer.org/foo?msg=Welcome%20in%20AGS&amp;amp;param=32

ConsoleWrite(URLEncode(&quot;123abc!@#$%^&amp;amp;*()_+ &quot;) &amp;amp; @crlf)
; Output &amp;gt;&amp;gt; 123abc!%40%23%24%25%5E%26*()_%2B%20
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Continue la lecture ?&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://autoit-gui-skeleton.github.io//fr/documentation/getting-started#dependencies-manager-for-autoit&quot;&gt;Dependencies manager for AutoIt&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
            <pubDate>Tue, 17 Jul 2018 00:00:00 +0200</pubDate>
        </item>
        
        <item>
            <title>Utiliser des fichiers JSON dans AutoIt avec &lt;b&gt;AGS-wrapper-json&lt;/b&gt;</title>
            <link>/blog/2018/07/16/ags_wrapper_json.html</link>
            <guid isPermaLink="true">/blog/2018/07/16/ags_wrapper_json.html</guid>
            <description>&lt;blockquote&gt;
  &lt;p&gt;Pour travailler avec des fichiers JSON, AGS fournit le &lt;em&gt;wrapper&lt;/em&gt; &lt;a href=&quot;https://www.npmjs.com/package/@autoit-gui-skeleton/ags-wrapper-json&quot;&gt;@autoit-gui-skeleton/ags-wrapper-json&lt;/a&gt; de la librairie JSON.au3, créé par Ward. Cette librairie nous permet de décoder / encoder en JSON en utilisant l’analyseur &lt;a href=&quot;https://zserge.com/jsmn.html&quot;&gt;jsmn&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;h1 id=&quot;comment-installer-ags-wrapper-json-&quot;&gt;Comment installer AGS-wrapper-json ?&lt;/h1&gt;

&lt;p&gt;On suppose que vous avez déjà installé &lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; et &lt;a href=&quot;https://yarnpkg.com/lang/en/&quot;&gt;Yarn&lt;/a&gt;, par example avec &lt;a href=&quot;https://chocolatey.org/&quot;&gt;Chocolatey&lt;/a&gt;, et pour installer le package AGS-wrapper-json, vous pouvez alors utiliser le gestionnaire de dépendances pour AutoIt fournit dans AGS. Il suffit donc de taper dans le dossier racine du projet, où le fichier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; est stocké:&lt;/p&gt;

&lt;pre class=&quot;command-line&quot; data-prompt=&quot;C: \&amp;gt;&quot;&gt;
&lt;code class=&quot; language-bash&quot;&gt;yarn add @autoit-gui-skeleton/ags-wrapper-json --modules-folder vendor&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;Toutes les dépendances du projet, ainsi que les dépendances filles des dépedances parentes sont installées dans le répertoire &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./vendor/@autoit-gui-skeleton/&lt;/code&gt;. Pour l’utiliser dans son programme AutoIt, vous devez inclure cette bibliothèque avec l’instruction:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-autoit&quot;&gt;#include &apos;vendor/@autoit-gui-skeleton/ags-wrapper-json/JSON.au3&apos;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tous les paquets AGS hébergés dans le dépôt npmjs appartiennent à l’organisation &lt;a href=&quot;https://www.npmjs.com/search?q=autoit-gui-skeleton&quot;&gt;@autoit-gui-skeleton organization&lt;/a&gt;. En effet afin de simplifier la gestion des dépendances d’un projet AutoIt construit avec le framework AGS, nous avons détourné de son utilisation initiale le gestionnaire de dépendance npm, et son évolution Yarn. Cela nous permet de gérer les dépendances d’un projet AGS avec d’autres bibliothèques AutoIt, et de partager ces paquets AutoIt à partir du référentiel npmjs.org.&lt;/p&gt;

&lt;h1 id=&quot;comment-décoder-un-json-&quot;&gt;Comment décoder un JSON ?&lt;/h1&gt;

&lt;h2 id=&quot;décoder-depuis-un-fichier-json-local&quot;&gt;Décoder depuis un fichier JSON local&lt;/h2&gt;

&lt;p&gt;Par exemple, crééz ce fichier json dans le répertoire &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./assets/DROIDS.json&lt;/code&gt; de votre projet AGS.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;project&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Listing droids&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;author&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Luke&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;mail&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;luke@2080.org&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;droids&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;R2D2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Astromecano&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;size&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0,96m&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;BB8&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Astromecano&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;size&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0,67m&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;C-3PO&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Social&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;size&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1,67m&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Pour décoder ce fichier, on utilise la fonction suivante &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;json_decode_from_file&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-autoit&quot;&gt;#include &apos;vendor/@autoit-gui-skeleton/ags-wrapper-json/JSON.au3&apos;

;====================================================================================
; Decode JSON from a given local file
;
; @param $jsonfilePath (string)
; @return $object (object), instance return by json_decode
;====================================================================================
Func json_decode_from_file($filePath)
	Local $fileOpen, $fileContent, $object

	$fileOpen = FileOpen($filePath, $FO_READ)
	If $fileOpen = -1 Then
		Return SetError(1, 0, &quot;An error occurred when reading the file &quot; &amp;amp; $filePath)
	EndIf
	$fileContent = FileRead($fileOpen)
	FileClose($fileOpen)
	$object = Json_Decode($fileContent)

	Return $object
EndFunc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Selon la documentation de Ward:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The most JSON data type will be decoded into corresponding AutoIt variable, including 1D array, string, number, true, false, and null. JSON object will be decoded into “Windows Scripting Dictionary Object” retuned from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ObjCreate(&quot;Scripting.Dictionary&quot;)&lt;/code&gt;. AutoIt build-in functions like IsArray, IsBool, etc. can be used to check the returned data type. But for Object and Null, Json_IsObject() and Json_IsNull() should be used.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;If the input JSON string is invalid, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@Error&lt;/code&gt; will be set to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$JSMN_ERROR_INVAL&lt;/code&gt;. And if the input JSON string is not finish, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@Error&lt;/code&gt; will be set to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$JSMN_ERROR_PART&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;obtenir-la-valeur-à-partir-dun-objet-json&quot;&gt;Obtenir la valeur à partir d’un objet JSON&lt;/h2&gt;

&lt;p&gt;Pour utiliser &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$jsonObject&lt;/code&gt;, le retour de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;json_decode_from_file&lt;/code&gt;, vous pouvez utilsier la fonction &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Json_Get&lt;/code&gt;. Pour sélectionner une variable JSON, vous pouvez utiliser au choix la notation par point ou par crochet.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-autoit&quot;&gt;Local $file = @ScriptDir &amp;amp; &quot;\assets\DROIDS.json&quot;
Local $jsonObject = json_decode_from_file($file)

; With dot notation
Local $project = Json_Get($jsonObject, &apos;.project&apos;)     ; Listing droids
Local $name = Json_Get($jsonObject, &apos;.author.name&apos;)    ; Luke
Local $mail = Json_Get($jsonObject, &apos;.author.mail&apos;)    ; luke@2080.org
local $test = Json_Get($jsonObject, &apos;.droids[1].name&apos;) ; BB8

; With array notation
Local $project2 = Json_Get($jsonObject, &apos;[&quot;project&quot;]&apos;)
Local $name2 = Json_Get($jsonObject, &apos;[&quot;author&quot;][&quot;name&quot;]&apos;)
Local $mail2 = Json_Get($jsonObject, &apos;[&quot;author&quot;][&quot;mail&quot;]&apos;)
local $test2 = Json_Get($jsonObject, &apos;[&quot;droids&quot;][1][&quot;name&quot;]&apos;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vous pouvez également utiliser des fonctions d’aide, qui son des couches d’abtractions des  fonctions de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Scripting.Dictionary&lt;/code&gt; COM object.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Json_ObjCreate()&lt;/li&gt;
  &lt;li&gt;Json_ObjPut(ByRef $Object, $Key, $Value)&lt;/li&gt;
  &lt;li&gt;Json_ObjGet(ByRef $Object, $Key)&lt;/li&gt;
  &lt;li&gt;Json_ObjDelete(ByRef $Object, $Key)&lt;/li&gt;
  &lt;li&gt;Json_ObjExists(ByRef $Object, $Key)&lt;/li&gt;
  &lt;li&gt;Json_ObjGetCount(ByRef $Object)&lt;/li&gt;
  &lt;li&gt;Json_ObjGetKeys(ByRef $Object)&lt;/li&gt;
  &lt;li&gt;Json_ObjClear(ByRef $Object)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;travailler-avec-une-collection-dobjet-et-parcourir-ses-éléments&quot;&gt;Travailler avec une collection d’objet et parcourir ses éléments&lt;/h2&gt;

&lt;p&gt;Pour itérer les valeurs d’un tableau json:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-autoit&quot;&gt;Local $file = @ScriptDir &amp;amp; &quot;\assets\DROIDS.json&quot;
Local $jsonObject = json_decode_from_file($file)

; Check if exists an item droid into the collection `droids`
Local $droids = Json_Get($jsonObject, &apos;.droids&apos;)
If UBound($droids) = 0 Then
    Return SetError(3, 0, &quot;Array attribute &apos;droids&apos; is empty.&quot;)
EndIf

; Iterate items collection to store values into an array 
Local $array[UBound($droids)][3]
For $i = 0 To UBound($droids) - 1 Step 1
    $array[$i][0] = Json_Get($jsonObject, &apos;.droids&apos; &amp;amp; &apos;[&apos; &amp;amp; $i &amp;amp; &apos;].name&apos;)
    $array[$i][1] = Json_Get($jsonObject, &apos;.droids&apos; &amp;amp; &apos;[&apos; &amp;amp; $i &amp;amp; &apos;].type&apos;)
    $array[$i][2] = Json_Get($jsonObject, &apos;.droids&apos; &amp;amp; &apos;[&apos; &amp;amp; $i &amp;amp; &apos;].size&apos;)
Next
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;ajouter-un-objet-dans-un-json&quot;&gt;Ajouter un objet dans un JSON&lt;/h2&gt;

&lt;p&gt;Vous pouvez le faire simplement avec la fonction &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Json_Put&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-àutoit&quot;&gt;Local $Obj
Json_Put($Obj, &quot;.foo&quot;, &quot;foo&quot;)
Json_Put($Obj, &quot;.bar[0]&quot;, &quot;bar&quot;)
Json_Put($Obj, &quot;.test[1].foo.bar[2].foo.bar&quot;, &quot;Test&quot;)

Local $Test = Json_Get($Obj, &apos;[&quot;test&quot;][1][&quot;foo&quot;][&quot;bar&quot;][2][&quot;foo&quot;][&quot;bar&quot;]&apos;) ; &quot;Test&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;décoder-un-fichier-json-depuis-un-serveur-distant&quot;&gt;Décoder un fichier JSON depuis un serveur distant&lt;/h2&gt;

&lt;p&gt;Pour décoder un fichier JSON hébergé sur un serveur distant, ou qui se construit depuis un webservice ou encore à partir d’une API Rest, vous pouvez utiliser &lt;a href=&quot;https://www.npmjs.com/package/@autoit-gui-skeleton/ags-component-http-request&quot;&gt;@autoit-gui-skeleton/ags-component-http-request&lt;/a&gt; pour effectuer des requetes HTTP vers une URL donnée.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-autoit&quot;&gt;#include &apos;vendor/@autoit-gui-skeleton/ags-component-http-request/ags-component-http-request.au3&apos;

;====================================================================================
; Decode JSON from a given URL
;
; @param $jsonfileUrl (string)
; @param $proxy (string), by default we load proxy settings form configuration file
; @return $object (object), instance return by json_decode
;====================================================================================
Func json_decode_from_url($jsonfileUrl, $proxy = &quot;&quot;)
	Local $response = HttpGET($jsonfileUrl, Default, $proxy)
	If (@error) Then
		Return SetError(@error, $response, _ 
		    &quot;Unable to get json file on server &quot; &amp;amp; $jsonfileUrl &amp;amp; &quot;.&quot;)
	EndIf
	Local $data = $response.ResponseText
	Local $object = json_decode($data)

	Return $object
EndFunc

Local $jsonObject = json_decode_from_url(https://api.spacexdata.com/v2/info)

Local $name = Json_Get($jsonObject, &apos;.name&apos;)        ; SpaceX
Local $founder = Json_Get($jsonObject, &apos;.founder&apos;)  ; Elon Musk
Local $founded = Json_Get($jsonObject, &apos;.founded&apos;)  ; 2002
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;comment-encoder-un-json-&quot;&gt;Comment encoder un JSON ?&lt;/h1&gt;

&lt;p&gt;Selon la documentation de Ward’s, vous pouvez utilsier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Json_Encode($Data, $Option = 0, $Indent = &quot;\t&quot;, $ArraySep = &quot;,\r\n&quot;, $ObjectSep = &quot;,\r\n&quot;, $ColonSep = &quot;: &quot;)&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$Data&lt;/code&gt; can be a string, number, bool, keyword : default or null, 1D array, or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Scripting.Dictionary&lt;/code&gt; COM object.&lt;/li&gt;
    &lt;li&gt;Binary will be converted to string in UTF8 encoding.&lt;/li&gt;
    &lt;li&gt;Ptr will be converted to number&lt;/li&gt;
    &lt;li&gt;Other unsupported types like 2D array, dllstruct or object will be encoded into null.&lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$Option&lt;/code&gt; is bitmask consisting following constant:&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$JSON_UNESCAPED_ASCII&lt;/code&gt; ; Don’t escape ascii charcters between chr(1) ~ chr(0x1f)&lt;/li&gt;
    &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$JSON_UNESCAPED_UNICODE&lt;/code&gt; ; Encode multibyte Unicode characters literally&lt;/li&gt;
    &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$JSON_UNESCAPED_SLASHES&lt;/code&gt; ; Don’t escape /&lt;/li&gt;
    &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$JSON_HEX_TAG&lt;/code&gt; ; All &amp;lt; and &amp;gt; are converted to \u003C and \u003E&lt;/li&gt;
    &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$JSON_HEX_AMP&lt;/code&gt; ; All &amp;amp;amp;amp;amp;s are converted to \u0026&lt;/li&gt;
    &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$JSON_HEX_APOS&lt;/code&gt; ; All ‘ are converted to \u0027&lt;/li&gt;
    &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$JSON_HEX_QUOT&lt;/code&gt; ; All “ are converted to \u0022&lt;/li&gt;
    &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$JSON_PRETTY_PRINT&lt;/code&gt; ; Use whitespace in returned data to format it&lt;/li&gt;
    &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$JSON_STRICT_PRINT&lt;/code&gt; ; Make sure returned JSON string is RFC4627 compliant&lt;/li&gt;
    &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$JSON_UNQUOTED_STRING&lt;/code&gt; ; Output unquoted string if possible (conflicting with $JSMN_STRICT_PRINT)&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Par exemple pour encoder en JSON:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-autoit&quot;&gt;Local $file = @ScriptDir &amp;amp; &quot;\assets\DROIDS.json&quot;
Local $jsonObject = json_decode_from_file($file)
Local $jsonEncoded = Json_Encode($jsonObject, $JSON_PRETTY_PRINT)

ConsoleWrite($jsonEncoded)
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;Most encoding option have the same means like PHP’s json_encode() function. When &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$JSON_PRETTY_PRINT&lt;/code&gt; is set, output format can be change by other 4 parameters : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;($Indent, $ArraySep, $ObjectSep, $ColonSep)&lt;/code&gt;. Because these 4 output format parameters will be checked inside &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Jsmn_Encode()&lt;/code&gt; function, returned string will be always accepted by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Jsmn_Decode()&lt;/code&gt;. $JSON_UNQUOTED_STRING can be used to output unquoted string that also accetped by Jsmn_Decode(). &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$JSON_STRICT_PRINT&lt;/code&gt; is used to check output format setting and avoid non-standard JSON output. So this option is conflicting with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$JSON_UNQUOTED_STRING&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Continuer la lecture ?&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://www.autoitscript.com/forum/topic/148114-a-non-strict-json-udf-jsmn/&quot;&gt;https://www.autoitscript.com/forum/topic/148114-a-non-strict-json-udf-jsmn/&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://autoit-gui-skeleton.github.io//fr/documentation/getting-started#gestion-de-dépendances-pour-autoit&quot;&gt;Dependencies manager for AutoIt&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
            <pubDate>Mon, 16 Jul 2018 00:00:00 +0200</pubDate>
        </item>
        
        <item>
            <title>AGS fournit un gestionnaire de dépendances rapide pour AutoIt avec Yarn.</title>
            <link>/blog/2018/07/10/ags_dependencies_manager_for_AutoIt.html</link>
            <guid isPermaLink="true">/blog/2018/07/10/ags_dependencies_manager_for_AutoIt.html</guid>
            <description>&lt;blockquote&gt;
  &lt;p&gt;Pour simplifier la gestion des dépendances d’un projet AutoIt construit avec AGS, nous avons détourné de son usage initial le gestionnaire de dépendances npm, et son évolution Yarn. Ce qui nous permet de gérer les dependances d’un projet AGS avec d’autres librairies AutoIt, et de partager ces packages AutoIt depuis le depôt npmjs.org.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;h1 id=&quot;gestionnaire-de-dépendances-pour-autoit&quot;&gt;Gestionnaire de dépendances pour AutoIt&lt;/h1&gt;

&lt;p&gt;Une dépendance ? C’est un package externe et autonomie (librairie) qui contient un ou plusieurs fichiers, et qui exécute une tâche spécifique. Les gestionnaires de dépendances sont des programmes qui coordonnent l’integration de bibliothèques ou de packages externes dans un projet d’application. Les gestionnaires de dépendances utilisent un fichier de configuration pour décrire le projet et ses dépendances.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://autoit-gui-skeleton.github.io//assets/img/autoit_yarn.jpg&quot; alt=&quot;AGS dependency manager AutoIt&quot; /&gt;&lt;/p&gt;

&lt;p&gt;AGS utilise l’écosystème Node.js et son gestionnaire de dépendances npm et Yarn.&lt;/p&gt;

&lt;h2 id=&quot;package-ags--composant-ou-wrapper&quot;&gt;Package AGS : &lt;em&gt;composant&lt;/em&gt; ou &lt;em&gt;wrapper&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;Tous les paquets AGS hébergés dans le réferentiel npmjs.org appartiennent à l’organisation &lt;a href=&quot;https://www.npmjs.com/search?q=autoit-gui-skeleton&quot;&gt;@autoit-gui-skeleton&lt;/a&gt;. Et vous pouvez y trouver deux types de paquets hébergés dans cette organisation.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Un &lt;strong&gt;AGS-component&lt;/strong&gt; est une bibliothèque AutoIt, que vous pouvez utiliser facilement dans votre projet Autoit construit avec le framework AGS. Jetez un coup d’œil à ce composant &lt;a href=&quot;https://www.npmjs.com/package/@autoit-gui-skeleton/ags-component-http-request&quot;&gt;AGS-component http-request&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Un &lt;strong&gt;AGS-wrapper&lt;/strong&gt; est une simple enveloppe d’une bibliothèque AutoIt développé par un tiers. Ce qui permet de beneficier des avantages d’un gestionnaire de dépendances. Jetez un coup d’œil à cet exemple &lt;a href=&quot;https://www.npmjs.com/package/@autoit-gui-skeleton/ags-wrapper-json&quot;&gt;AGS-wrapper-json&lt;/a&gt; qui encapsule le projet JSON.au3 conçu par Ward.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;comment-installer-un-package-ags-&quot;&gt;Comment installer un package AGS ?&lt;/h2&gt;

&lt;p&gt;Pour installer un composant AGS ou un wrapper dans son projet, il suffit de taper dans le repertoire racine, où le fichier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; est stocké:&lt;/p&gt;

&lt;pre class=&quot;command-line&quot; data-prompt=&quot;C: \MyProject\&amp;gt;&quot;&gt;
&lt;code class=&quot; language-bash&quot;&gt;yarn add @autoit-gui-skeleton/ags-component-xxx --modules-folder vendor
yarn add @autoit-gui-skeleton/ags-wrapper-xxx --modules-folder vendor&lt;/code&gt;
&lt;/pre&gt;

&lt;h3 id=&quot;décrire-un-projet-ags-et-ses-dépendances&quot;&gt;Décrire un projet AGS et ses dépendances&lt;/h3&gt;

&lt;p&gt;Pour décrire un projet AGS et ses dependances, on utilise naturellement le fichier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; propre à l’écosystème Node.js. Vous pouvez trouvez plus d’information sur ce fichier ici &lt;a href=&quot;https://yarnpkg.com/lang/en/docs/package-json/&quot;&gt;https://yarnpkg.com/lang/en/docs/package-json/&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ApplicationWithCheckForUpdates&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Example to implementation of AGS-component-check-for-updates&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;AGS&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;framework&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;AutoIt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;3.3.14.5&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;author&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;v20100v &amp;lt;v20100v@no-reply.com&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;license&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;MIT License&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;year&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2018&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;private&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;repository&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;not-yet-git&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;git&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;dependencies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;@autoit-gui-skeleton/AGS-component-check-for-updates&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Et finallement pour installer toutes les dépendances d’un projet donné, il suffit alors de lancer cette commande:&lt;/p&gt;

&lt;pre class=&quot;command-line&quot; data-prompt=&quot;C: \&amp;gt;MyProject\&quot;&gt;
&lt;code class=&quot; language-bash&quot;&gt;yarn install --modules-folder vendor&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;Toutes les dependances du projet, ainsi que les dépendances filles des dependances mères, sont installés dans le répertoire &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./vendor/@autoit-gui-skeleton/&lt;/code&gt;. Si vous avez ajouter des libraires AutoIt dans le repertoire vendor, nous vous conseillons de les “wrapper”, afin qu’elles soient aussi gérés par le gestionnaire de dépendances, de la même manière qu’avec &lt;a href=&quot;https://www.npmjs.com/package/@autoit-gui-skeleton/ags-wrapper-json&quot;&gt;AGS-wrapper-json&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Pour que les dépendances AutoIt s’installent dans le répertoire &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./vendor&lt;/code&gt;, et pas dans le répertoire par defaut de Node.js &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./node_modules&lt;/code&gt;, il faut ajouter l’option &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--modules-folder vendor&lt;/code&gt;. Nous forçons ce choix pour éviter toute confusion avec un projet Node.js. Remarquons qu’avec un projet AGS, il n’est pas nécessaire d’écrire explicitement cet option en ligne de commande grace au fichier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.yarnrc&lt;/code&gt; stocké à la racine du projet, i.e. au même endroit que le fichier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt;. Yarn regarge automatiquement dans ce fichier pour ajouter une configuration d’options supplémentaire.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; #./.yarnrc 
 --modules-folder vendor
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ainsi avec ce fichier vous pouvez lancer &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yarn install&lt;/code&gt; pour installer les dépendances directement dans le répertoire approprié &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./vendor&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Liens connexes&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/search?q=autoit-gui-skeleton&quot;&gt;Voir tous les packages publiées sur npmjs.org&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
            <pubDate>Tue, 10 Jul 2018 00:00:00 +0200</pubDate>
        </item>
        
        <item>
            <title>AGS facilite la création d&apos;installeur Windows (setup) d&apos;application AutoIt</title>
            <link>/blog/2018/06/04/autoit-windows-setup.html</link>
            <guid isPermaLink="true">/blog/2018/06/04/autoit-windows-setup.html</guid>
            <description>&lt;blockquote&gt;
  &lt;p&gt;AGS fournit un processus et d’autres fonctionnalités pour faciliter la création d’un installeur Windows (setup) d’une application AutoIt.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;h1 id=&quot;fonctionnalités-pour-faciliter-le-déploiement-dapplication-dautoit&quot;&gt;Fonctionnalités pour faciliter le déploiement d’application d’AutoIt&lt;/h1&gt;

&lt;p&gt;Voici quelques nouvelles fonctionnalités avec le couple AGS et InnoSetup:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Générer un package (archive zip) et un installeur Windows.&lt;/li&gt;
  &lt;li&gt;Soutenir l’internationalisation (i18n).&lt;/li&gt;
  &lt;li&gt;Vérifier si l’application est déjà installée.&lt;/li&gt;
  &lt;li&gt;Configurer des messages supplémentaires dans la configuration comme: contrat de licence, prérequis et projet d’historique.&lt;/li&gt;
  &lt;li&gt;Ajouter l’application dans le menu Démarrer de Windows.&lt;/li&gt;
  &lt;li&gt;Lancer une commande personnalisée après la fin de l’installation.&lt;/li&gt;
  &lt;li&gt;Personnaliser et modifier les éléments graphiques du programme d’installation de Windows.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;ags-utilise-un-batch-windows-pour-automatiser-la-génération-du-setup&quot;&gt;AGS utilise un batch Windows pour automatiser la génération du setup&lt;/h1&gt;

&lt;p&gt;Dans AGS on utilise un batch Windows qui joue le rôle de chef d’orchestre, pour générer le setup.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://autoit-gui-skeleton.github.io//assets/img/documentation/AGS-package-and-deployment-process.gif&quot; alt=&quot;AGS GUI package and deployment process&quot; class=&quot;img-full img-fancybox&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Lire la documentation AGS&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://autoit-gui-skeleton.github.io//fr/documentation/creating-setup-package-autoit-application&quot;&gt;Création d’installeur - setup Windows - pour des applications AutoIt&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
            <pubDate>Mon, 04 Jun 2018 00:00:00 +0200</pubDate>
        </item>
        
        <item>
            <title>Publication d&apos;AGS sur Github</title>
            <link>/blog/2018/05/22/ags-publish-github.html</link>
            <guid isPermaLink="true">/blog/2018/05/22/ags-publish-github.html</guid>
            <description>&lt;p&gt;AutoIt Gui Skeleton (AGS) est maintenant disponible sur &lt;a href=&quot;https://github.com/autoit-gui-skeleton&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;AGS offre un environnement pour les développeurs pour faciliter la création d’applications AutoIt. Pour ce faire, AGS propose d’utiliser des conventions et une organisation du code spécifique, et il fournit également des outils pour aider les développeurs dans les taches recurrentes liés à l’ingénierie logicielle.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://autoit-gui-skeleton.github.io//fr/documentation&quot;&gt;Pour démarrer avec AGS&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://github.com/autoit-gui-skeleton&quot;&gt;Voir AGS sur GitHub&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

</description>
            <pubDate>Tue, 22 May 2018 00:00:00 +0200</pubDate>
        </item>
        
        <item>
            <title>Github Pages avec Jekyll</title>
            <link>/blog/2018/05/17/thx-github-jekyll.html</link>
            <guid isPermaLink="true">/blog/2018/05/17/thx-github-jekyll.html</guid>
            <description>&lt;blockquote&gt;
  &lt;p&gt;Le site de documentation d’AGS est déployé sur Github Pages avec Jekyll. Merci pour ce mariage heureux.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;h1 id=&quot;cest-quoi-github-pages&quot;&gt;C’est quoi GitHub Pages?&lt;/h1&gt;

&lt;p&gt;GitHub Pages est un service d’hebergement de site statique à destination d’une organisation, d’une personne ou pour un projet directement depuis un dépôt GitHub.&lt;/p&gt;

&lt;p&gt;Plus d’informations ici : &lt;a href=&quot;https://help.github.com/articles/what-is-github-pages/&quot;&gt;Github Pages&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;cest-quoi-jekyll-&quot;&gt;C’est quoi Jekyll ?&lt;/h1&gt;

&lt;p&gt;Jekyll est un simple geneateur de site statique, type blod, adapté pour des sites personnels, projet ou d’une organisation.&lt;/p&gt;

&lt;p&gt;Plus d’inforamtion ici : &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;github-pages-avec-jekyll&quot;&gt;Github Pages avec Jekyll&lt;/h1&gt;

&lt;p&gt;Pour ce site, on utilise Jekyll comme generateur de site en lien avec Github Pages. En effet en plus de supporter les contenus HTML, Github Pages fonctionne également avec Jekyll.&lt;/p&gt;

&lt;p&gt;Plus d’information ici : &lt;a href=&quot;https://help.github.com/articles/using-jekyll-as-a-static-site-generator-with-github-pages/&quot;&gt;Jekyll support on Github Pages&lt;/a&gt;.&lt;/p&gt;
</description>
            <pubDate>Thu, 17 May 2018 00:00:00 +0200</pubDate>
        </item>
        
    </channel>
</rss>