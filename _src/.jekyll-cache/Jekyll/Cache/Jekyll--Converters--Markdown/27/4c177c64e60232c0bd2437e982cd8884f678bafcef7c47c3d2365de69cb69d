I"€}<blockquote>
  <p>AGS fournit le composant <a href="https://www.npmjs.com/package/@autoit-gui-skeleton/ags-component-check-for-updates">@autoit-gui-skeleton/ags-component-check-for-updates</a> afin d‚Äôajouter la fonctionnalit√© pour v√©rifier les mises √† jour dans une application AutoIt.</p>
</blockquote>

<!--more-->

<h1 id="comment-installer-ags-component-check-for-updates-">Comment installer AGS-component-check-for-updates ?</h1>

<p>On suppose que vous avez d√©j√† install√© <a href="https://nodejs.org/">Node.js</a> et <a href="https://yarnpkg.com/lang/en/">Yarn</a>, par example avec <a href="https://chocolatey.org/">Chocolatey</a>, et pour installer le package AGS-component-check-for-updatest, vous pouvez alors utiliser le gestionnaire de d√©pendances pour AutoIt fournit dans AGS. Il suffit donc de taper dans le dossier racine du projet, o√π le fichier <code class="language-plaintext highlighter-rouge">package.json</code> est stock√©:</p>

<pre class="command-line" data-prompt="C: \&gt;">
<code class=" language-bash">yarn add @autoit-gui-skeleton/ags-component-check-for-updates --modules-folder vendor</code>
</pre>

<p>Toutes les d√©pendances du projet, ainsi que les d√©pendances filles des d√©pedances parentes sont install√©es dans le r√©pertoire <code class="language-plaintext highlighter-rouge">./vendor/@autoit-gui-skeleton/</code>.</p>

<p>Tous les paquets AGS h√©berg√©s dans le d√©p√¥t npmjs appartiennent √† l‚Äôorganisation <a href="https://www.npmjs.com/search?q=autoit-gui-skeleton">@autoit-gui-skeleton organization</a>. En effet afin de simplifier la gestion des d√©pendances d‚Äôun projet AutoIt construit avec le framework AGS, nous avons d√©tourn√© de son utilisation initiale le gestionnaire de d√©pendance npm, et son √©volution Yarn. Cela nous permet de g√©rer les d√©pendances d‚Äôun projet AGS avec d‚Äôautres biblioth√®ques AutoIt, et de partager ces paquets AutoIt √† partir du r√©f√©rentiel npmjs.org.</p>

<h1 id="comment-utilsier-ags-component-check-for-updates-">Comment utilsier AGS-component-check-for-updates ?</h1>

<h2 id="description">Description</h2>

<p>Avec AGS-component-check-for-updates, vous pouvez cr√©er une application AutoIt disposant d‚Äôune fonctionnalit√© pour v√©rifier ses propres mises √† jour. Il fournit alors un lien pour t√©l√©charger la derni√®re version de l‚Äôinstalleur, et un autre lien vers les notes de versions.</p>

<p><img src="https://raw.githubusercontent.com/autoit-gui-skeleton/ags-component-check-for-updates/master/example/ApplicationWithCheckForUpdates/docs/AGS-component-check-for-updates-update-available.png" alt="ags-component-check-for-updates :: update available" /></p>

<p>Pour fonctionner, il compare la version locale de l‚Äôapplication install√©e sur le PC de l‚Äôutilisateur avec le r√©f√©rentiel des versions publi√©es de l‚Äôapplication. Ce r√©f√©rentiel est un fichier json, <code class="language-plaintext highlighter-rouge">RELEASES.json</code>, qui est h√©berg√© sur un serveur distant. Nous devons donc nous connecter √† Internet pour envoyer une requ√™te HTTP pour r√©cup√©rer ce fichier, et nous avons besoin d‚Äôune analyse JSON. Ce composant d√©pend donc des autres composants AGS: ags-wrapper-json et ags-component-http-request. Si vous souhaitez simuler diff√©rents sc√©narios de v√©rification des mises √† jour, il vous suffit de modifier la valeur de l‚Äôensemble des versions de l‚Äôapplication dans <code class="language-plaintext highlighter-rouge">./src/GLOBALS.au3</code>.</p>

<p>Le fichier distant <code class="language-plaintext highlighter-rouge">RELEASES.json</code> ressemble √† ceci:</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"ApplicationWithCheckForUpdates"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"description"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Example to implementation of AGS-component-check-for-updates"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"license"</span><span class="p">:</span><span class="w"> </span><span class="s2">"MIT"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"homepage"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://autoit-gui-skeleton.github.io"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"releases"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
    </span><span class="p">{</span><span class="w">
      </span><span class="nl">"version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"1.0.0"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"state"</span><span class="p">:</span><span class="w"> </span><span class="s2">"stable"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"downloadSetup"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://myApplication.com/v1.0.0/setup_myApplication_v1.0.0.exe"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"published"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2018-10-07"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"releaseNotes"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://myApplication.com/v1.0.0/README.md"</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="p">{</span><span class="w">
      </span><span class="nl">"version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0.1.0"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"state"</span><span class="p">:</span><span class="w"> </span><span class="s2">"prototype"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"downloadSetup"</span><span class="p">:</span><span class="w"> </span><span class="s2">"undefined"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"published"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2014-03-21"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"releaseNotes"</span><span class="p">:</span><span class="w"> </span><span class="s2">"undefined"</span><span class="w">
    </span><span class="p">}</span><span class="w">
  </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h2 id="exemple-dune-application-qui-impl√©mente-ags-component-check-for-updates">Exemple d‚Äôune application qui impl√©mente AGS-component-check-for-updates</h2>

<p>Jetez un oeil √† cet exemple <a href="https://github.com/autoit-gui-skeleton/AGS-component-check-for-updates/tree/master/example/ApplicationWithCheckForUpdates">ApplicationWithCheckForUpdates</a>. Cette application a des caract√©ristiques int√©ressantes :</p>

<ul>
  <li>V√©rifier la mise √† jour au d√©marrage de l‚Äôapplication AutoIt;</li>
  <li>V√©rifier la mise √† jour depuis le menu ‚Äú?&gt; V√©rifier la mise √† jour‚Äù;</li>
  <li>Modifierles param√®tres de l‚Äôapplication √† partir de la vue ‚ÄúConfiguration&gt; Param√®tres‚Äù. Les valeurs sont conserv√©es dans le fichier de configuration <code class="language-plaintext highlighter-rouge">./config/parameters.ini</code>. Dans cette vue, nous pouvons d√©finir des param√®tres proxy pour sp√©cifier comment cette application essaie de se connecter √† Internet.</li>
</ul>

<p>Si l‚Äôoption de v√©rification de recherche de mise √† jour de l‚Äôapplication √† chaque d√©marrage est activ√©e, et si une nouvelle version de cette application est disponible, alors lorsque l‚Äôutilisateur d√©marre l‚Äôapplication, il donne cette information dans une fen√™tre enfant.</p>

<h2 id="m√©thodes-disponibles">M√©thodes disponibles</h2>

<p>Cette biblioth√®que fournit plusieurs m√©thodes</p>

<table>
  <thead>
    <tr>
      <th>Methods</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">json_decode_from_file($filePath)</code></td>
      <td>Decode JSON from a given local file.</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">json_decode_from_url($jsonfileUrl, $proxy = "")</code></td>
      <td>Decode JSON from a given URL.</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">RELEASES_JSON_get_all_versions($jsonObject)</code></td>
      <td>Parse all defined version(s) persisted in a decoded RELEASES.json file given.</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">RELEASES_JSON_get_last_version($jsonObject)</code></td>
      <td>Get last version persisted in RELEASES.json</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">CheckForUpdates($currentApplicationVersion, $remoteUrlReleasesJson, $proxy = "")</code></td>
      <td>Compare the current version with the last version persisted in an remote RELEASES.json file, in order to check if an update is available.</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">_GUI_launch_CheckForUpdates($main_GUI, $context)</code></td>
      <td>Launch a check for updates. The build of a GUI exposing the results depends on the context when the check for update is launch : with an user interaction from menu or on startup application. We store the option to search update on starup in the configuration file <code class="language-plaintext highlighter-rouge">./config/parameters.ini</code> in parameter <code class="language-plaintext highlighter-rouge">LAUNCH_CHECK_FOR_UPDATE_ON_STARTUP</code>.</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">_GUI_build_view_to_CheckForUpdates($main_GUI, $resultCheckForUpdate, $context = "")</code></td>
      <td>Create a child GUI use to expose the result of a check updater. It exposes if an update of current application is available. The child GUI is related to a given main GUI of application. If this method is execute on startup, we built this child GUI only if an update is available. And when this method is called by a user interaction, we built this child GUI in any case : no update available, new update or experimental.</td>
    </tr>
  </tbody>
</table>

<h2 id="configurer-le-composant-ags-component-check-for-updates">Configurer le composant AGS-component-check-for-updates</h2>

<h3 id="cr√©ation-du-fichier-de-configuration-configparametersini">Cr√©ation du fichier de configuration <code class="language-plaintext highlighter-rouge">./config/parameters.ini</code></h3>

<p>Avec AGS vous devez avoir un fichier de configuration <code class="language-plaintext highlighter-rouge">./config/parameters.ini</code>. Ce fichier ne doit pas √™tre sauvegarder avec le contr√¥le de version. Vous pouvez utiliser <code class="language-plaintext highlighter-rouge">./config/parameters.ini.dist</code> comme un ‚Äòtemplate‚Äô de ce √† quoi devrait ressembler votre fichier parameters.ini. D√©finissez les param√®tres ici qui peuvent √™tre diff√©rents sur chaque application.</p>

<p>Pour configurer le comportement de ce composant, vous pouvez d√©finir ses options dans ce fichier de configuration. Vous pouvez activer ou d√©sactiver la recherche d‚Äôune nouvelle mise √† jour lorsque l‚Äôapplication d√©marre, avec la variable <code class="language-plaintext highlighter-rouge">LAUNCH_CHECK_FOR_UPDATE_ON_STARTUP</code> de la section <code class="language-plaintext highlighter-rouge">AGS_CHECK_FOR_UPDATES</code>.</p>

<div class="language-ini highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">[AGS_CHECK_FOR_UPDATES]</span>
<span class="c">; [REQUIRED] Enable/disable the search of a new update on start-up.
</span><span class="py">LAUNCH_CHECK_FOR_UPDATE_ON_STARTUP</span><span class="p">=</span><span class="s">1</span>
</code></pre></div></div>

<p>Dans ce composant, on utilise un autre composant <a href="https://www.npmjs.com/package/@autoit-gui-skeleton/ags-component-http-request">AGS-component-http-request</a>. Cette biblioth√®que est utilis√©e pour envoyer une requ√™te HTTP avec la m√©thode GET ou POST, et avec ou sans un proxy, afin d‚Äôobtenir le fichier distant <code class="language-plaintext highlighter-rouge">RELEASES.json</code>. Vous pouvez donc √©galement configurer ce composant. Par exemple, vous pouvez d√©finir un proxy pour toutes les connexions HTTP ou d√©finir diff√©rents types de d√©lais. Par d√©faut, ce composant recherche dans le fichier de configuration si un proxy est d√©fini dans la variable <code class="language-plaintext highlighter-rouge">PROXY</code> de la section<code class="language-plaintext highlighter-rouge"> AGS_HTTP_REQUEST</code>.</p>

<div class="language-ini highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">[AGS_HTTP_REQUEST]</span>
<span class="c">; [OPTIONAL] Use a proxy for http connexion or choose NONE to disable it
# PROXY=NONE
</span><span class="py">PROXY</span><span class="p">=</span><span class="s">http://myProxy.com:20100</span>
</code></pre></div></div>

<h3 id="d√©finir-les-constantes-dans-srcglobalsau3">D√©finir les constantes dans <code class="language-plaintext highlighter-rouge">./src/GLOBALS.au3</code></h3>

<p>Toutes les constantes et les variables globales sont d√©finies √† un seul endroit <code class="language-plaintext highlighter-rouge">./src/GLOBALS.au3</code>, √† l‚Äôexception des variables globales des √©l√©ments graphiques qui sont d√©finies dans chaque fichier de vue sp√©cifique. AGS-component-check-for-udpates utilise la constante <code class="language-plaintext highlighter-rouge">$APP_REMOTE_RELEASES_JSON</code> pour sp√©cifier o√π le r√©f√©rentiel<code class="language-plaintext highlighter-rouge"> RELEASES.json</code> est h√©berg√©.</p>

<p>Ce fichier json doit √™tre sauvegarder dans un serveur distant disponible via internet, et sans restriction. Par exemple, vous pouvez utiliser Github pour h√©berger ce fichier, comme ceci:</p>

<pre><code class="language-autoit">Global Const $APP_REMOTE_RELEASES_JSON = "https://raw.githubusercontent.com/autoit-gui-skeleton/AGS-component-check-for-updates/master/example/ApplicationWithCheckForUpdates/RELEASES.json"
</code></pre>

<h3 id="comment-effectuer-une-recherche-de-mise-√†-jour-au-d√©marrage-">Comment effectuer une recherche de mise √† jour au d√©marrage ?</h3>

<p>Dans la m√©thode <code class="language-plaintext highlighter-rouge">_main_GUI()</code> du manager principal de l‚Äôinterface utilisateur <code class="language-plaintext highlighter-rouge">./src/GUI.au3</code>, il suffit d‚Äôajouter un appel √† la m√©thode <code class="language-plaintext highlighter-rouge">_GUI_launch_CheckForUpdates</code> comme ceci.</p>

<pre><code class="language-autoit">;; ./src/GUI.au3 ;;

Func _main_GUI()
	Global $main_GUI = GUICreate($APP_NAME, $APP_WIDTH, $APP_HEIGHT, -1, -1)

	_GUI_Init_Menu()
	_GUI_Init_Footer()
	_GUI_Init_View_Welcome()
	_GUI_Init_View_About()
	_GUI_Init_View_Settings()

	; Set configuration application : icon, background color
	_GUI_Configuration()

	; Show Welcome view on startup
	_GUI_ShowHide_View_Welcome($GUI_SHOW)
	GUISetState(@SW_SHOW)

	; Launch a check for updates on startup, the check is performed 
	; only if LAUNCH_CHECK_FOR_UPDATE_ON_STARTUP is enable in
	; the configuration file './config/parameters.ini'
	_GUI_launch_CheckForUpdates($main_GUI, "ON_STARTUP")

	; Handle all user interactions and events
	_GUI_HandleEvents()

	GUIDelete()
	Exit
EndFunc
</code></pre>

<h3 id="comment-effectuer-une-recherche-de-mise-√†-jour-depuis-un-√©lement-du-menu-">Comment effectuer une recherche de mise √† jour depuis un √©lement du menu ?</h3>

<p>Dans la m√©thode <code class="language-plaintext highlighter-rouge">GUI_Init_Menu</code>, on ajoute un nouvel item pour v√©rifier les mises √† jour.</p>

<pre><code class="language-autoit">;; ./src/GUI.au3 ;;

Func _GUI_Init_Menu()

    (...)
    
	; Cr√©ation 'About' menu
	Global $menu_About = GUICtrlCreateMenu("?")
	Global $menuitem_Help = GUICtrlCreateMenuItem("Help", $menu_About)
	Global $menuitem_CheckForUpdate = GUICtrlCreateMenuItem("Check for update", $menu_About)
EndFunc
</code></pre>

<p>Et on traite les √©venements de clics sur le menu ‚ÄúAbout‚Äù comme ceci.</p>

<pre><code class="language-autoit">;; ./src/GUI.au3 ;;

Func _GUI_HandleEvents_Menu_About($msg)
	Switch $msg
		Case $menuitem_Help
			ConsoleWrite('Click on "? &gt; Help"' &amp; @CRLF)
		
		Case $menuitem_CheckForUpdate
			_GUI_launch_CheckForUpdates($main_GUI, "ON_MENU")
EndFunc
</code></pre>

<h3 id="lutilisateur-peut-modifier-les-param√®tres-directement-dans-lapplication">L‚Äôutilisateur peut modifier les param√®tres directement dans l‚Äôapplication</h3>

<p>Vous pouvez cr√©er une vue dans l‚Äôapplication afin de modifier ses param√®tres. Toutes les valeurs sont conserv√©es dans le fichier de configuration <code class="language-plaintext highlighter-rouge">./config/parameters.ini</code>. Dans cette vue, nous pouvons d√©finir des param√®tres proxy pour sp√©cifier comment cette application essaie de se connecter √† Internet et si l‚Äôapplication recherche une mise √† jour au d√©marrage.</p>

<p><img src="https://raw.githubusercontent.com/autoit-gui-skeleton/ags-component-check-for-updates/master/example/ApplicationWithCheckForUpdates/docs/AGS-component-check-for-updates-view-settings.png" alt="AGS-component-check-for-updates :: view settings application" /></p>

<p>Lorsque l‚Äôutilisateur clique sur le bouton Enregistrer, il utilise le service <code class="language-plaintext highlighter-rouge">./src/services/ParametersIni.au3</code>, qui appelle la m√©thode<code class="language-plaintext highlighter-rouge"> IniWrite</code> sur le fichier de configuration <code class="language-plaintext highlighter-rouge">./config/parameters.ini</code> pour sauvegarder les changements.</p>

<pre><code class="language-autoit">;====================================================================================
; Save values choose by user in 'Setting' views, and launch with 'save' button
;
; @params void
; @return void
;====================================================================================
Func _save_parameters_ini()
	; Save proxy settings
	IniWrite($APP_PARAMETERS_INI, "AGS_HTTP_REQUEST", "PROXY", GUICtrlRead($input_HTTP_Proxy))
	IniWrite($APP_PARAMETERS_INI, "AGS_HTTP_REQUEST", "RESOLVE_TIMEOUT", GUICtrlRead($input_HTTP_Resolve_Timeout))
	IniWrite($APP_PARAMETERS_INI, "AGS_HTTP_REQUEST", "CONNECT_TIMEOUT", GUICtrlRead($input_HTTP_Connect_Timeout))
	IniWrite($APP_PARAMETERS_INI, "AGS_HTTP_REQUEST", "SEND_TIMEOUT", GUICtrlRead($input_HTTP_Send_Timeout))
	IniWrite($APP_PARAMETERS_INI, "AGS_HTTP_REQUEST", "RECEIVE_TIMEOUT", GUICtrlRead($input_HTTP_Receive_Timeout))

	; Startup settings
	If (GUICtrlRead($checkbox_STARTUP_CHECK_UPDATE) = $GUI_CHECKED) Then
		IniWrite($APP_PARAMETERS_INI, "AGS_CHECK_FOR_UPDATES", "LAUNCH_CHECK_FOR_UPDATE_ON_STARTUP", "1")
	Else
		IniWrite($APP_PARAMETERS_INI, "AGS_CHECK_FOR_UPDATES", "LAUNCH_CHECK_FOR_UPDATE_ON_STARTUP", "0")
	EndIf
EndFunc
</code></pre>

<p>Et le code source du gestionnaire de la vue ‚ÄúSettings‚Äù</p>

<pre><code class="language-autoit">;; ./src/views/View_Settings.au3 ;;

#include-once

;====================================================================================
; Create element for the 'Settings' view
;
; @param void
; @return void
;====================================================================================
Func _GUI_Init_View_Settings()
	GUISetFont(20, 800, 0, "Arial Narrow")
	Global $label_title_settings = GUICtrlCreateLabel("Settings", 20, 30, 400)
	GUICtrlSetColor($label_title_settings, 0x85C4ED)
	GUICtrlSetBkColor($label_title_settings, $GUI_BKCOLOR_TRANSPARENT)

	Local $height = 120
	Local $heightStep = 30
	Local $margin_top = 50

	; Proxy settings
	GUISetFont(9, 800, 0, "Arial")
	Local $height_group_proxy_settings = (5 * $heightStep) + 30
	Global $group_proxy_settings = GUICtrlCreateGroup(" Proxy ", 30, $height - 30, ($APP_WIDTH - 60), $height_group_proxy_settings)
	GUISetFont(9, 400, 0, "Arial")
	Local $PROXY = IniRead($APP_PARAMETERS_INI, "AGS_HTTP_REQUEST", "PROXY", "")
	Local $RESOLVE_TIMEOUT = Int(IniRead($APP_PARAMETERS_INI, "AGS_HTTP_REQUEST", "RESOLVE_TIMEOUT", 0))
	Local $CONNECT_TIMEOUT = Int(IniRead($APP_PARAMETERS_INI, "AGS_HTTP_REQUEST", "CONNECT_TIMEOUT", 60000))
	Local $SEND_TIMEOUT = Int(IniRead($APP_PARAMETERS_INI, "AGS_HTTP_REQUEST", "SEND_TIMEOUT", 30000))
	Local $RECEIVE_TIMEOUT = Int(IniRead($APP_PARAMETERS_INI, "AGS_HTTP_REQUEST", "RECEIVE_TIMEOUT", 30000))
	Global $label_HTTP_Proxy = GUICtrlCreateLabel("HTTP / HTTPS Proxy", 50, $height)
	Global $input_HTTP_Proxy = GUICtrlCreateInput($PROXY, 200, $height - 2, 400, 20)
	Global $label_HTTP_Resolve_Timeout = GUICtrlCreateLabel("Timeout for HTTP resolve", 50, $height + $heightStep)
	Global $input_HTTP_Resolve_Timeout = GUICtrlCreateInput($RESOLVE_TIMEOUT, 200, $height + $heightStep - 2, 100, 20)
	Global $label_HTTP_Connect_Timeout = GUICtrlCreateLabel("Timeout for HTTP connect", 50, $height + 2 * $heightStep)
	Global $input_HTTP_Connect_Timeout = GUICtrlCreateInput($CONNECT_TIMEOUT, 200, $height + 2 * $heightStep - 2, 100, 20)
	Global $label_HTTP_Send_Timeout = GUICtrlCreateLabel("Timeout for HTTP send", 50, $height + 3 * $heightStep)
	Global $input_HTTP_Send_Timeout = GUICtrlCreateInput($SEND_TIMEOUT, 200, $height + 3 * $heightStep - 2, 100, 20)
	Global $label_HTTP_Receive_Timeout = GUICtrlCreateLabel("Timeout for HTTP receive", 50, $height + 4 * $heightStep)
	Global $input_HTTP_Receive_Timeout = GUICtrlCreateInput($RECEIVE_TIMEOUT, 200, $height + 4 * $heightStep - 2, 100, 20)
	GUICtrlCreateGroup("", -1, -1, 1, 1)

	; Startup settings
	$height = $height + $height_group_proxy_settings
	GUISetFont(9, 800, 0, "Arial")
	Global $group_startup_settings = GUICtrlCreateGroup(" Start-up ", 30, $height, ($APP_WIDTH - 60), (1 * $heightStep) + 30)
	GUISetFont(9, 400, 0, "Arial")
	Global $checkbox_STARTUP_CHECK_UPDATE = GUICtrlCreateCheckbox( _
			"Search update on application startup ?", _
			50, $height + $heightStep, Default, 20, $BS_RIGHTBUTTON _
			)
	Local $LAUNCH_CHECK_FOR_UPDATE_ON_STARTUP = Int(IniRead($APP_PARAMETERS_INI, "AGS_CHECK_FOR_UPDATES", "LAUNCH_CHECK_FOR_UPDATE_ON_STARTUP", "NotFound"))
	If ($LAUNCH_CHECK_FOR_UPDATE_ON_STARTUP = 1) Then
		GUICtrlSetState($checkbox_STARTUP_CHECK_UPDATE, $GUI_CHECKED)
	Else
		GUICtrlSetState($checkbox_STARTUP_CHECK_UPDATE, $GUI_UNCHECKED)
	EndIf
	GUICtrlCreateGroup("", -1, -1, 1, 1)

	Global $button_save_settings = GUICtrlCreateButton("Save", ($APP_WIDTH - 150) / 2, $APP_HEIGHT - 100, 150)

	; Setter of tips and cursors
	_GUI_SetCursorAndTip_View_Settings()

	; Hide all elements by default
	_GUI_ShowHide_View_Settings($GUI_HIDE)
EndFunc


;====================================================================================
; Setter tips and cursor for elements in 'Settings' view
;
; @param void
; @return void
;====================================================================================
Func _GUI_SetCursorAndTip_View_Settings()
	GUICtrlSetCursor($label_HTTP_Proxy, 4)
	GUICtrlSetTip($label_HTTP_Proxy, @CRLF &amp; "Configuration of proxy to allow internet connection" &amp; @CRLF &amp; @CRLF &amp; "Example : http(s):\\myProxy.com:8080", "HTTP/HTTPS Proxy", 1)

	GUICtrlSetCursor($checkbox_STARTUP_CHECK_UPDATE, 4)
	GUICtrlSetTip($checkbox_STARTUP_CHECK_UPDATE, @CRLF &amp; "To allow the search of an update of the application at each start." &amp; @CRLF &amp; "This search requires an internet connection, and therefore" &amp; @CRLF &amp; "potenially need a configuration of a proxy.", "Check for update on start-up", 1)

	GUICtrlSetCursor($button_save_settings, 0)
EndFunc


;====================================================================================
; Handler for display element on 'Settings' view
;
; @param {int} $action, use GUIConstantsEx $GUI_SHOW or $GUI_HIDE
; @return void
;====================================================================================
Func _GUI_ShowHide_View_Settings($action)
	Switch $action
		Case $GUI_SHOW
			_GUI_Hide_all_view()
			; Define here all elements to show when user come into this view
			GUICtrlSetState($label_title_settings, $GUI_SHOW)
			GUICtrlSetState($group_proxy_settings, $GUI_SHOW)
			GUICtrlSetState($label_HTTP_Proxy, $GUI_SHOW)
			GUICtrlSetState($input_HTTP_Proxy, $GUI_SHOW)
			GUICtrlSetState($label_HTTP_Resolve_Timeout, $GUI_SHOW)
			GUICtrlSetState($input_HTTP_Resolve_Timeout, $GUI_SHOW)
			GUICtrlSetState($label_HTTP_Connect_Timeout, $GUI_SHOW)
			GUICtrlSetState($input_HTTP_Connect_Timeout, $GUI_SHOW)
			GUICtrlSetState($label_HTTP_Send_Timeout, $GUI_SHOW)
			GUICtrlSetState($input_HTTP_Send_Timeout, $GUI_SHOW)
			GUICtrlSetState($label_HTTP_Receive_Timeout, $GUI_SHOW)
			GUICtrlSetState($input_HTTP_Receive_Timeout, $GUI_SHOW)
			GUICtrlSetState($group_startup_settings, $GUI_SHOW)
			GUICtrlSetState($checkbox_STARTUP_CHECK_UPDATE, $GUI_SHOW)
			GUICtrlSetState($button_save_settings, $GUI_SHOW)

		Case $GUI_HIDE
			; Define here all elements to hide when user leave this view
			GUICtrlSetState($label_title_settings, $GUI_HIDE)
			GUICtrlSetState($group_proxy_settings, $GUI_HIDE)
			GUICtrlSetState($label_HTTP_Proxy, $GUI_HIDE)
			GUICtrlSetState($input_HTTP_Proxy, $GUI_HIDE)
			GUICtrlSetState($label_HTTP_Resolve_Timeout, $GUI_HIDE)
			GUICtrlSetState($input_HTTP_Resolve_Timeout, $GUI_HIDE)
			GUICtrlSetState($label_HTTP_Connect_Timeout, $GUI_HIDE)
			GUICtrlSetState($input_HTTP_Connect_Timeout, $GUI_HIDE)
			GUICtrlSetState($label_HTTP_Send_Timeout, $GUI_HIDE)
			GUICtrlSetState($input_HTTP_Send_Timeout, $GUI_HIDE)
			GUICtrlSetState($label_HTTP_Receive_Timeout, $GUI_HIDE)
			GUICtrlSetState($input_HTTP_Receive_Timeout, $GUI_HIDE)
			GUICtrlSetState($group_startup_settings, $GUI_HIDE)
			GUICtrlSetState($checkbox_STARTUP_CHECK_UPDATE, $GUI_HIDE)
			GUICtrlSetState($button_save_settings, $GUI_HIDE)

	EndSwitch
EndFunc


;====================================================================================
; Handler for events in 'Settings' view
;
; @param $msg, event return with GUIGetMsg method, i.e. the control ID of the control sending the message
; @return @void
;====================================================================================
Func _GUI_HandleEvents_View_Settings($msg)
	Switch $msg
		Case $button_save_settings
			ConsoleWrite('Click on "$button_save_settings"' &amp; @CRLF)
			_save_parameters_ini()
	EndSwitch
EndFunc
</code></pre>

<h3 id="comment-tester-les-diff√©rents-cas-de-recherche-de-mise-√†-jour-">Comment tester les diff√©rents cas de recherche de mise √† jour ?</h3>

<p>Dans cet example, nous avons d√©fini deux versions comme ceci:</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"ApplicationWithCheckForUpdates"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"description"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Example to implementation of AGS-component-check-for-updates"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"license"</span><span class="p">:</span><span class="w"> </span><span class="s2">"MIT"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"homepage"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://autoit-gui-skeleton.github.io"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"releases"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
    </span><span class="p">{</span><span class="w">
      </span><span class="nl">"version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"1.0.0"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"state"</span><span class="p">:</span><span class="w"> </span><span class="s2">"stable"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"downloadSetup"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://myApplication.com/v1.0.0/setup_myApplication_v1.0.0.exe"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"published"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2018-10-07"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"releaseNotes"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://myApplication.com/v1.0.0/README.md"</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="p">{</span><span class="w">
      </span><span class="nl">"version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0.9.0"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"state"</span><span class="p">:</span><span class="w"> </span><span class="s2">"prototype"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"downloadSetup"</span><span class="p">:</span><span class="w"> </span><span class="s2">"undefined"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"published"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2014-03-21"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"releaseNotes"</span><span class="p">:</span><span class="w"> </span><span class="s2">"undefined"</span><span class="w">
    </span><span class="p">}</span><span class="w">
  </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>Si vous voulez simuler diff√©rents sc√©narios sur la recherche de mise √† jour de ch√®ques, il vous suffit de changer la valeur de la version de l‚Äôapplication d√©finie dans <code class="language-plaintext highlighter-rouge">./src/GLOBALS.au3</code>. Par exemple pour simuler le cas de:</p>

<ul>
  <li>
    <p>une nouvelle version disponbile, changer la valeur pour : <code class="language-plaintext highlighter-rouge">Global Const $APP_VERSION = "0.9.0"</code> <br /><br /><img src="https://raw.githubusercontent.com/autoit-gui-skeleton/ags-component-check-for-updates/master/example/ApplicationWithCheckForUpdates/docs/AGS-component-check-for-updates-update-available.png" alt="ags-component-check-for-updates :: update available" /><br /><br /></p>
  </li>
  <li>
    <p>il n‚Äôy a pas de nouvelle version disponible : <code class="language-plaintext highlighter-rouge">Global Const $APP_VERSION = "1.0.0"</code> <br /><br /> <img src="https://raw.githubusercontent.com/autoit-gui-skeleton/ags-component-check-for-updates/master/example/ApplicationWithCheckForUpdates/docs/AGS-component-check-for-updates-no-update-available.png" alt="AGS-component-check-for-updates :: no update available" /><br /><br /></p>
  </li>
  <li>
    <p>vous utilisez une version experimental : <code class="language-plaintext highlighter-rouge">Global Const $APP_VERSION = "1.1.0"</code> <br /><br />
 <img src="https://raw.githubusercontent.com/autoit-gui-skeleton/ags-component-check-for-updates/master/example/ApplicationWithCheckForUpdates/docs/AGS-component-check-for-updates-experimental.png" alt="AGS-component-check-for-updates :: experimental version" /><br /><br /></p>
  </li>
</ul>

<p><br /></p>

<blockquote>
  <p><strong>Continue la lecture ?</strong></p>

  <p><a href="https://autoit-gui-skeleton.github.io//fr/documentation/getting-started#dependencies-manager-for-autoit">Dependencies manager for AutoIt</a></p>
</blockquote>
:ET